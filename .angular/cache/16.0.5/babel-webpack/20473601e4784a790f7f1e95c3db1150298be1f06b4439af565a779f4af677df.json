{"ast":null,"code":"'use strict';\n\n/**\n * @license Angular v<unknown>\n * (c) 2010-2022 Google LLC. https://angular.io/\n * License: MIT\n */\n(function (global) {\n  const performance = global['performance'];\n  function mark(name) {\n    performance && performance['mark'] && performance['mark'](name);\n  }\n  function performanceMeasure(name, label) {\n    performance && performance['measure'] && performance['measure'](name, label);\n  }\n  mark('Zone');\n  // Initialize before it's accessed below.\n  // __Zone_symbol_prefix global can be used to override the default zone\n  // symbol prefix with a custom one if needed.\n  const symbolPrefix = global['__Zone_symbol_prefix'] || '__zone_symbol__';\n  function __symbol__(name) {\n    return symbolPrefix + name;\n  }\n  const checkDuplicate = global[__symbol__('forceDuplicateZoneCheck')] === true;\n  if (global['Zone']) {\n    // if global['Zone'] already exists (maybe zone.js was already loaded or\n    // some other lib also registered a global object named Zone), we may need\n    // to throw an error, but sometimes user may not want this error.\n    // For example,\n    // we have two web pages, page1 includes zone.js, page2 doesn't.\n    // and the 1st time user load page1 and page2, everything work fine,\n    // but when user load page2 again, error occurs because global['Zone'] already exists.\n    // so we add a flag to let user choose whether to throw this error or not.\n    // By default, if existing Zone is from zone.js, we will not throw the error.\n    if (checkDuplicate || typeof global['Zone'].__symbol__ !== 'function') {\n      throw new Error('Zone already loaded.');\n    } else {\n      return global['Zone'];\n    }\n  }\n  class Zone {\n    static assertZonePatched() {\n      if (global['Promise'] !== patches['ZoneAwarePromise']) {\n        throw new Error('Zone.js has detected that ZoneAwarePromise `(window|global).Promise` ' + 'has been overwritten.\\n' + 'Most likely cause is that a Promise polyfill has been loaded ' + 'after Zone.js (Polyfilling Promise api is not necessary when zone.js is loaded. ' + 'If you must load one, do so before loading zone.js.)');\n      }\n    }\n    static get root() {\n      let zone = Zone.current;\n      while (zone.parent) {\n        zone = zone.parent;\n      }\n      return zone;\n    }\n    static get current() {\n      return _currentZoneFrame.zone;\n    }\n    static get currentTask() {\n      return _currentTask;\n    }\n    // tslint:disable-next-line:require-internal-with-underscore\n    static __load_patch(name, fn, ignoreDuplicate = false) {\n      if (patches.hasOwnProperty(name)) {\n        // `checkDuplicate` option is defined from global variable\n        // so it works for all modules.\n        // `ignoreDuplicate` can work for the specified module\n        if (!ignoreDuplicate && checkDuplicate) {\n          throw Error('Already loaded patch: ' + name);\n        }\n      } else if (!global['__Zone_disable_' + name]) {\n        const perfName = 'Zone:' + name;\n        mark(perfName);\n        patches[name] = fn(global, Zone, _api);\n        performanceMeasure(perfName, perfName);\n      }\n    }\n    get parent() {\n      return this._parent;\n    }\n    get name() {\n      return this._name;\n    }\n    constructor(parent, zoneSpec) {\n      this._parent = parent;\n      this._name = zoneSpec ? zoneSpec.name || 'unnamed' : '<root>';\n      this._properties = zoneSpec && zoneSpec.properties || {};\n      this._zoneDelegate = new _ZoneDelegate(this, this._parent && this._parent._zoneDelegate, zoneSpec);\n    }\n    get(key) {\n      const zone = this.getZoneWith(key);\n      if (zone) return zone._properties[key];\n    }\n    getZoneWith(key) {\n      let current = this;\n      while (current) {\n        if (current._properties.hasOwnProperty(key)) {\n          return current;\n        }\n        current = current._parent;\n      }\n      return null;\n    }\n    fork(zoneSpec) {\n      if (!zoneSpec) throw new Error('ZoneSpec required!');\n      return this._zoneDelegate.fork(this, zoneSpec);\n    }\n    wrap(callback, source) {\n      if (typeof callback !== 'function') {\n        throw new Error('Expecting function got: ' + callback);\n      }\n      const _callback = this._zoneDelegate.intercept(this, callback, source);\n      const zone = this;\n      return function () {\n        return zone.runGuarded(_callback, this, arguments, source);\n      };\n    }\n    run(callback, applyThis, applyArgs, source) {\n      _currentZoneFrame = {\n        parent: _currentZoneFrame,\n        zone: this\n      };\n      try {\n        return this._zoneDelegate.invoke(this, callback, applyThis, applyArgs, source);\n      } finally {\n        _currentZoneFrame = _currentZoneFrame.parent;\n      }\n    }\n    runGuarded(callback, applyThis = null, applyArgs, source) {\n      _currentZoneFrame = {\n        parent: _currentZoneFrame,\n        zone: this\n      };\n      try {\n        try {\n          return this._zoneDelegate.invoke(this, callback, applyThis, applyArgs, source);\n        } catch (error) {\n          if (this._zoneDelegate.handleError(this, error)) {\n            throw error;\n          }\n        }\n      } finally {\n        _currentZoneFrame = _currentZoneFrame.parent;\n      }\n    }\n    runTask(task, applyThis, applyArgs) {\n      if (task.zone != this) {\n        throw new Error('A task can only be run in the zone of creation! (Creation: ' + (task.zone || NO_ZONE).name + '; Execution: ' + this.name + ')');\n      }\n      // https://github.com/angular/zone.js/issues/778, sometimes eventTask\n      // will run in notScheduled(canceled) state, we should not try to\n      // run such kind of task but just return\n      if (task.state === notScheduled && (task.type === eventTask || task.type === macroTask)) {\n        return;\n      }\n      const reEntryGuard = task.state != running;\n      reEntryGuard && task._transitionTo(running, scheduled);\n      task.runCount++;\n      const previousTask = _currentTask;\n      _currentTask = task;\n      _currentZoneFrame = {\n        parent: _currentZoneFrame,\n        zone: this\n      };\n      try {\n        if (task.type == macroTask && task.data && !task.data.isPeriodic) {\n          task.cancelFn = undefined;\n        }\n        try {\n          return this._zoneDelegate.invokeTask(this, task, applyThis, applyArgs);\n        } catch (error) {\n          if (this._zoneDelegate.handleError(this, error)) {\n            throw error;\n          }\n        }\n      } finally {\n        // if the task's state is notScheduled or unknown, then it has already been cancelled\n        // we should not reset the state to scheduled\n        if (task.state !== notScheduled && task.state !== unknown) {\n          if (task.type == eventTask || task.data && task.data.isPeriodic) {\n            reEntryGuard && task._transitionTo(scheduled, running);\n          } else {\n            task.runCount = 0;\n            this._updateTaskCount(task, -1);\n            reEntryGuard && task._transitionTo(notScheduled, running, notScheduled);\n          }\n        }\n        _currentZoneFrame = _currentZoneFrame.parent;\n        _currentTask = previousTask;\n      }\n    }\n    scheduleTask(task) {\n      if (task.zone && task.zone !== this) {\n        // check if the task was rescheduled, the newZone\n        // should not be the children of the original zone\n        let newZone = this;\n        while (newZone) {\n          if (newZone === task.zone) {\n            throw Error(`can not reschedule task to ${this.name} which is descendants of the original zone ${task.zone.name}`);\n          }\n          newZone = newZone.parent;\n        }\n      }\n      task._transitionTo(scheduling, notScheduled);\n      const zoneDelegates = [];\n      task._zoneDelegates = zoneDelegates;\n      task._zone = this;\n      try {\n        task = this._zoneDelegate.scheduleTask(this, task);\n      } catch (err) {\n        // should set task's state to unknown when scheduleTask throw error\n        // because the err may from reschedule, so the fromState maybe notScheduled\n        task._transitionTo(unknown, scheduling, notScheduled);\n        // TODO: @JiaLiPassion, should we check the result from handleError?\n        this._zoneDelegate.handleError(this, err);\n        throw err;\n      }\n      if (task._zoneDelegates === zoneDelegates) {\n        // we have to check because internally the delegate can reschedule the task.\n        this._updateTaskCount(task, 1);\n      }\n      if (task.state == scheduling) {\n        task._transitionTo(scheduled, scheduling);\n      }\n      return task;\n    }\n    scheduleMicroTask(source, callback, data, customSchedule) {\n      return this.scheduleTask(new ZoneTask(microTask, source, callback, data, customSchedule, undefined));\n    }\n    scheduleMacroTask(source, callback, data, customSchedule, customCancel) {\n      return this.scheduleTask(new ZoneTask(macroTask, source, callback, data, customSchedule, customCancel));\n    }\n    scheduleEventTask(source, callback, data, customSchedule, customCancel) {\n      return this.scheduleTask(new ZoneTask(eventTask, source, callback, data, customSchedule, customCancel));\n    }\n    cancelTask(task) {\n      if (task.zone != this) throw new Error('A task can only be cancelled in the zone of creation! (Creation: ' + (task.zone || NO_ZONE).name + '; Execution: ' + this.name + ')');\n      if (task.state !== scheduled && task.state !== running) {\n        return;\n      }\n      task._transitionTo(canceling, scheduled, running);\n      try {\n        this._zoneDelegate.cancelTask(this, task);\n      } catch (err) {\n        // if error occurs when cancelTask, transit the state to unknown\n        task._transitionTo(unknown, canceling);\n        this._zoneDelegate.handleError(this, err);\n        throw err;\n      }\n      this._updateTaskCount(task, -1);\n      task._transitionTo(notScheduled, canceling);\n      task.runCount = 0;\n      return task;\n    }\n    _updateTaskCount(task, count) {\n      const zoneDelegates = task._zoneDelegates;\n      if (count == -1) {\n        task._zoneDelegates = null;\n      }\n      for (let i = 0; i < zoneDelegates.length; i++) {\n        zoneDelegates[i]._updateTaskCount(task.type, count);\n      }\n    }\n  }\n  // tslint:disable-next-line:require-internal-with-underscore\n  Zone.__symbol__ = __symbol__;\n  const DELEGATE_ZS = {\n    name: '',\n    onHasTask: (delegate, _, target, hasTaskState) => delegate.hasTask(target, hasTaskState),\n    onScheduleTask: (delegate, _, target, task) => delegate.scheduleTask(target, task),\n    onInvokeTask: (delegate, _, target, task, applyThis, applyArgs) => delegate.invokeTask(target, task, applyThis, applyArgs),\n    onCancelTask: (delegate, _, target, task) => delegate.cancelTask(target, task)\n  };\n  class _ZoneDelegate {\n    constructor(zone, parentDelegate, zoneSpec) {\n      this._taskCounts = {\n        'microTask': 0,\n        'macroTask': 0,\n        'eventTask': 0\n      };\n      this.zone = zone;\n      this._parentDelegate = parentDelegate;\n      this._forkZS = zoneSpec && (zoneSpec && zoneSpec.onFork ? zoneSpec : parentDelegate._forkZS);\n      this._forkDlgt = zoneSpec && (zoneSpec.onFork ? parentDelegate : parentDelegate._forkDlgt);\n      this._forkCurrZone = zoneSpec && (zoneSpec.onFork ? this.zone : parentDelegate._forkCurrZone);\n      this._interceptZS = zoneSpec && (zoneSpec.onIntercept ? zoneSpec : parentDelegate._interceptZS);\n      this._interceptDlgt = zoneSpec && (zoneSpec.onIntercept ? parentDelegate : parentDelegate._interceptDlgt);\n      this._interceptCurrZone = zoneSpec && (zoneSpec.onIntercept ? this.zone : parentDelegate._interceptCurrZone);\n      this._invokeZS = zoneSpec && (zoneSpec.onInvoke ? zoneSpec : parentDelegate._invokeZS);\n      this._invokeDlgt = zoneSpec && (zoneSpec.onInvoke ? parentDelegate : parentDelegate._invokeDlgt);\n      this._invokeCurrZone = zoneSpec && (zoneSpec.onInvoke ? this.zone : parentDelegate._invokeCurrZone);\n      this._handleErrorZS = zoneSpec && (zoneSpec.onHandleError ? zoneSpec : parentDelegate._handleErrorZS);\n      this._handleErrorDlgt = zoneSpec && (zoneSpec.onHandleError ? parentDelegate : parentDelegate._handleErrorDlgt);\n      this._handleErrorCurrZone = zoneSpec && (zoneSpec.onHandleError ? this.zone : parentDelegate._handleErrorCurrZone);\n      this._scheduleTaskZS = zoneSpec && (zoneSpec.onScheduleTask ? zoneSpec : parentDelegate._scheduleTaskZS);\n      this._scheduleTaskDlgt = zoneSpec && (zoneSpec.onScheduleTask ? parentDelegate : parentDelegate._scheduleTaskDlgt);\n      this._scheduleTaskCurrZone = zoneSpec && (zoneSpec.onScheduleTask ? this.zone : parentDelegate._scheduleTaskCurrZone);\n      this._invokeTaskZS = zoneSpec && (zoneSpec.onInvokeTask ? zoneSpec : parentDelegate._invokeTaskZS);\n      this._invokeTaskDlgt = zoneSpec && (zoneSpec.onInvokeTask ? parentDelegate : parentDelegate._invokeTaskDlgt);\n      this._invokeTaskCurrZone = zoneSpec && (zoneSpec.onInvokeTask ? this.zone : parentDelegate._invokeTaskCurrZone);\n      this._cancelTaskZS = zoneSpec && (zoneSpec.onCancelTask ? zoneSpec : parentDelegate._cancelTaskZS);\n      this._cancelTaskDlgt = zoneSpec && (zoneSpec.onCancelTask ? parentDelegate : parentDelegate._cancelTaskDlgt);\n      this._cancelTaskCurrZone = zoneSpec && (zoneSpec.onCancelTask ? this.zone : parentDelegate._cancelTaskCurrZone);\n      this._hasTaskZS = null;\n      this._hasTaskDlgt = null;\n      this._hasTaskDlgtOwner = null;\n      this._hasTaskCurrZone = null;\n      const zoneSpecHasTask = zoneSpec && zoneSpec.onHasTask;\n      const parentHasTask = parentDelegate && parentDelegate._hasTaskZS;\n      if (zoneSpecHasTask || parentHasTask) {\n        // If we need to report hasTask, than this ZS needs to do ref counting on tasks. In such\n        // a case all task related interceptors must go through this ZD. We can't short circuit it.\n        this._hasTaskZS = zoneSpecHasTask ? zoneSpec : DELEGATE_ZS;\n        this._hasTaskDlgt = parentDelegate;\n        this._hasTaskDlgtOwner = this;\n        this._hasTaskCurrZone = zone;\n        if (!zoneSpec.onScheduleTask) {\n          this._scheduleTaskZS = DELEGATE_ZS;\n          this._scheduleTaskDlgt = parentDelegate;\n          this._scheduleTaskCurrZone = this.zone;\n        }\n        if (!zoneSpec.onInvokeTask) {\n          this._invokeTaskZS = DELEGATE_ZS;\n          this._invokeTaskDlgt = parentDelegate;\n          this._invokeTaskCurrZone = this.zone;\n        }\n        if (!zoneSpec.onCancelTask) {\n          this._cancelTaskZS = DELEGATE_ZS;\n          this._cancelTaskDlgt = parentDelegate;\n          this._cancelTaskCurrZone = this.zone;\n        }\n      }\n    }\n    fork(targetZone, zoneSpec) {\n      return this._forkZS ? this._forkZS.onFork(this._forkDlgt, this.zone, targetZone, zoneSpec) : new Zone(targetZone, zoneSpec);\n    }\n    intercept(targetZone, callback, source) {\n      return this._interceptZS ? this._interceptZS.onIntercept(this._interceptDlgt, this._interceptCurrZone, targetZone, callback, source) : callback;\n    }\n    invoke(targetZone, callback, applyThis, applyArgs, source) {\n      return this._invokeZS ? this._invokeZS.onInvoke(this._invokeDlgt, this._invokeCurrZone, targetZone, callback, applyThis, applyArgs, source) : callback.apply(applyThis, applyArgs);\n    }\n    handleError(targetZone, error) {\n      return this._handleErrorZS ? this._handleErrorZS.onHandleError(this._handleErrorDlgt, this._handleErrorCurrZone, targetZone, error) : true;\n    }\n    scheduleTask(targetZone, task) {\n      let returnTask = task;\n      if (this._scheduleTaskZS) {\n        if (this._hasTaskZS) {\n          returnTask._zoneDelegates.push(this._hasTaskDlgtOwner);\n        }\n        // clang-format off\n        returnTask = this._scheduleTaskZS.onScheduleTask(this._scheduleTaskDlgt, this._scheduleTaskCurrZone, targetZone, task);\n        // clang-format on\n        if (!returnTask) returnTask = task;\n      } else {\n        if (task.scheduleFn) {\n          task.scheduleFn(task);\n        } else if (task.type == microTask) {\n          scheduleMicroTask(task);\n        } else {\n          throw new Error('Task is missing scheduleFn.');\n        }\n      }\n      return returnTask;\n    }\n    invokeTask(targetZone, task, applyThis, applyArgs) {\n      return this._invokeTaskZS ? this._invokeTaskZS.onInvokeTask(this._invokeTaskDlgt, this._invokeTaskCurrZone, targetZone, task, applyThis, applyArgs) : task.callback.apply(applyThis, applyArgs);\n    }\n    cancelTask(targetZone, task) {\n      let value;\n      if (this._cancelTaskZS) {\n        value = this._cancelTaskZS.onCancelTask(this._cancelTaskDlgt, this._cancelTaskCurrZone, targetZone, task);\n      } else {\n        if (!task.cancelFn) {\n          throw Error('Task is not cancelable');\n        }\n        value = task.cancelFn(task);\n      }\n      return value;\n    }\n    hasTask(targetZone, isEmpty) {\n      // hasTask should not throw error so other ZoneDelegate\n      // can still trigger hasTask callback\n      try {\n        this._hasTaskZS && this._hasTaskZS.onHasTask(this._hasTaskDlgt, this._hasTaskCurrZone, targetZone, isEmpty);\n      } catch (err) {\n        this.handleError(targetZone, err);\n      }\n    }\n    // tslint:disable-next-line:require-internal-with-underscore\n    _updateTaskCount(type, count) {\n      const counts = this._taskCounts;\n      const prev = counts[type];\n      const next = counts[type] = prev + count;\n      if (next < 0) {\n        throw new Error('More tasks executed then were scheduled.');\n      }\n      if (prev == 0 || next == 0) {\n        const isEmpty = {\n          microTask: counts['microTask'] > 0,\n          macroTask: counts['macroTask'] > 0,\n          eventTask: counts['eventTask'] > 0,\n          change: type\n        };\n        this.hasTask(this.zone, isEmpty);\n      }\n    }\n  }\n  class ZoneTask {\n    constructor(type, source, callback, options, scheduleFn, cancelFn) {\n      // tslint:disable-next-line:require-internal-with-underscore\n      this._zone = null;\n      this.runCount = 0;\n      // tslint:disable-next-line:require-internal-with-underscore\n      this._zoneDelegates = null;\n      // tslint:disable-next-line:require-internal-with-underscore\n      this._state = 'notScheduled';\n      this.type = type;\n      this.source = source;\n      this.data = options;\n      this.scheduleFn = scheduleFn;\n      this.cancelFn = cancelFn;\n      if (!callback) {\n        throw new Error('callback is not defined');\n      }\n      this.callback = callback;\n      const self = this;\n      // TODO: @JiaLiPassion options should have interface\n      if (type === eventTask && options && options.useG) {\n        this.invoke = ZoneTask.invokeTask;\n      } else {\n        this.invoke = function () {\n          return ZoneTask.invokeTask.call(global, self, this, arguments);\n        };\n      }\n    }\n    static invokeTask(task, target, args) {\n      if (!task) {\n        task = this;\n      }\n      _numberOfNestedTaskFrames++;\n      try {\n        task.runCount++;\n        return task.zone.runTask(task, target, args);\n      } finally {\n        if (_numberOfNestedTaskFrames == 1) {\n          drainMicroTaskQueue();\n        }\n        _numberOfNestedTaskFrames--;\n      }\n    }\n    get zone() {\n      return this._zone;\n    }\n    get state() {\n      return this._state;\n    }\n    cancelScheduleRequest() {\n      this._transitionTo(notScheduled, scheduling);\n    }\n    // tslint:disable-next-line:require-internal-with-underscore\n    _transitionTo(toState, fromState1, fromState2) {\n      if (this._state === fromState1 || this._state === fromState2) {\n        this._state = toState;\n        if (toState == notScheduled) {\n          this._zoneDelegates = null;\n        }\n      } else {\n        throw new Error(`${this.type} '${this.source}': can not transition to '${toState}', expecting state '${fromState1}'${fromState2 ? ' or \\'' + fromState2 + '\\'' : ''}, was '${this._state}'.`);\n      }\n    }\n    toString() {\n      if (this.data && typeof this.data.handleId !== 'undefined') {\n        return this.data.handleId.toString();\n      } else {\n        return Object.prototype.toString.call(this);\n      }\n    }\n    // add toJSON method to prevent cyclic error when\n    // call JSON.stringify(zoneTask)\n    toJSON() {\n      return {\n        type: this.type,\n        state: this.state,\n        source: this.source,\n        zone: this.zone.name,\n        runCount: this.runCount\n      };\n    }\n  }\n  //////////////////////////////////////////////////////\n  //////////////////////////////////////////////////////\n  ///  MICROTASK QUEUE\n  //////////////////////////////////////////////////////\n  //////////////////////////////////////////////////////\n  const symbolSetTimeout = __symbol__('setTimeout');\n  const symbolPromise = __symbol__('Promise');\n  const symbolThen = __symbol__('then');\n  let _microTaskQueue = [];\n  let _isDrainingMicrotaskQueue = false;\n  let nativeMicroTaskQueuePromise;\n  function nativeScheduleMicroTask(func) {\n    if (!nativeMicroTaskQueuePromise) {\n      if (global[symbolPromise]) {\n        nativeMicroTaskQueuePromise = global[symbolPromise].resolve(0);\n      }\n    }\n    if (nativeMicroTaskQueuePromise) {\n      let nativeThen = nativeMicroTaskQueuePromise[symbolThen];\n      if (!nativeThen) {\n        // native Promise is not patchable, we need to use `then` directly\n        // issue 1078\n        nativeThen = nativeMicroTaskQueuePromise['then'];\n      }\n      nativeThen.call(nativeMicroTaskQueuePromise, func);\n    } else {\n      global[symbolSetTimeout](func, 0);\n    }\n  }\n  function scheduleMicroTask(task) {\n    // if we are not running in any task, and there has not been anything scheduled\n    // we must bootstrap the initial task creation by manually scheduling the drain\n    if (_numberOfNestedTaskFrames === 0 && _microTaskQueue.length === 0) {\n      // We are not running in Task, so we need to kickstart the microtask queue.\n      nativeScheduleMicroTask(drainMicroTaskQueue);\n    }\n    task && _microTaskQueue.push(task);\n  }\n  function drainMicroTaskQueue() {\n    if (!_isDrainingMicrotaskQueue) {\n      _isDrainingMicrotaskQueue = true;\n      while (_microTaskQueue.length) {\n        const queue = _microTaskQueue;\n        _microTaskQueue = [];\n        for (let i = 0; i < queue.length; i++) {\n          const task = queue[i];\n          try {\n            task.zone.runTask(task, null, null);\n          } catch (error) {\n            _api.onUnhandledError(error);\n          }\n        }\n      }\n      _api.microtaskDrainDone();\n      _isDrainingMicrotaskQueue = false;\n    }\n  }\n  //////////////////////////////////////////////////////\n  //////////////////////////////////////////////////////\n  ///  BOOTSTRAP\n  //////////////////////////////////////////////////////\n  //////////////////////////////////////////////////////\n  const NO_ZONE = {\n    name: 'NO ZONE'\n  };\n  const notScheduled = 'notScheduled',\n    scheduling = 'scheduling',\n    scheduled = 'scheduled',\n    running = 'running',\n    canceling = 'canceling',\n    unknown = 'unknown';\n  const microTask = 'microTask',\n    macroTask = 'macroTask',\n    eventTask = 'eventTask';\n  const patches = {};\n  const _api = {\n    symbol: __symbol__,\n    currentZoneFrame: () => _currentZoneFrame,\n    onUnhandledError: noop,\n    microtaskDrainDone: noop,\n    scheduleMicroTask: scheduleMicroTask,\n    showUncaughtError: () => !Zone[__symbol__('ignoreConsoleErrorUncaughtError')],\n    patchEventTarget: () => [],\n    patchOnProperties: noop,\n    patchMethod: () => noop,\n    bindArguments: () => [],\n    patchThen: () => noop,\n    patchMacroTask: () => noop,\n    patchEventPrototype: () => noop,\n    isIEOrEdge: () => false,\n    getGlobalObjects: () => undefined,\n    ObjectDefineProperty: () => noop,\n    ObjectGetOwnPropertyDescriptor: () => undefined,\n    ObjectCreate: () => undefined,\n    ArraySlice: () => [],\n    patchClass: () => noop,\n    wrapWithCurrentZone: () => noop,\n    filterProperties: () => [],\n    attachOriginToPatched: () => noop,\n    _redefineProperty: () => noop,\n    patchCallbacks: () => noop,\n    nativeScheduleMicroTask: nativeScheduleMicroTask\n  };\n  let _currentZoneFrame = {\n    parent: null,\n    zone: new Zone(null, null)\n  };\n  let _currentTask = null;\n  let _numberOfNestedTaskFrames = 0;\n  function noop() {}\n  performanceMeasure('Zone', 'Zone');\n  return global['Zone'] = Zone;\n})(typeof window !== 'undefined' && window || typeof self !== 'undefined' && self || global);\n\n/**\n * A different implementation for monkey patching Promise.\n * Currently Zone.js patches Promise itself with ZoneAwarePromise and also Promise.prototype.then\n * The reason is:\n *\n * 1. Promise.prototype.then should trigger ZoneSpec.scheduleTask and acts as a microTask\n * 2. Promise should be able to controlled by fakeAsync(), so Promise.prototype.then can work as\n * sync operation in fakeAsync()\n * 3. Promise unhandledRejection can be handled by ZoneSpec.onHandleError hook\n *\n * And this implementation also has it's disadvantage.\n *\n * 1. We need to implement a full Promise spec by ourselves.\n * 2. We need to implement the new APIs for Promise such as (all, allSettled, any...) when the new\n * APIs are available.\n * 3. Promise behavior is different with the native one, such as the timing of then callback.\n * 4. Can not handle the some vm operation requires native Promise such as async/await or\n * SafePromise.\n *\n * And this new implementation try to address most of these disadvantages.\n * 1. We don't monkey patch Promise itself any longer.\n * 2. We only monkey patches Promise.prototype.then and schedule microTask from there.\n * 3. The Promise APIs are all using native ones.\n * 4. SafePromise issues are gone, and the timing will be the same with the native one.\n *\n * Also this new implementation introduces breaking changes.\n *\n * 1. Promise can not be easily handled by fakeAsync(), and since we will deprecate fakeAsync() in\n * the future, this is the first step.\n * 2. Promise unhandled rejection happened inside new Promise(callback) will not be handled by\n * ZoneSpec.onHandleError(thenCallback error will not be be impacted).\n *\n * So now we only introduces this change to `zone-node` bundle, since the breaking change will be\n * minor for NodeJS environment,\n * @TODO: JiaLiPassion, we will introduce this change to browser later.\n */\nZone.__load_patch('ZoneAwarePromise', (global, Zone, api) => {\n  const __symbol__ = api.symbol;\n  const symbolThen = __symbol__('then');\n  api.onUnhandledError = e => {\n    if (api.showUncaughtError()) {\n      const rejection = e && e.rejection;\n      if (rejection) {\n        console.error('Unhandled Promise rejection:', rejection instanceof Error ? rejection?.message : rejection, '; Zone:', e.zone.name, '; Task:', e.task && e.task.source, '; Value:', rejection, rejection instanceof Error ? rejection.stack : undefined);\n      } else {\n        console.error(e);\n      }\n    }\n  };\n  api.microtaskDrainDone = () => {};\n  const symbolThenPatched = __symbol__('thenPatched');\n  function patchThen(Ctor) {\n    const proto = Ctor.prototype;\n    if (Ctor[symbolThenPatched] === true) {\n      return;\n    }\n    const prop = Object.getOwnPropertyDescriptor(proto, 'then');\n    if (prop && (prop.writable === false || !prop.configurable)) {\n      // check Ctor.prototype.then propertyDescriptor is writable or not\n      // in meteor env, writable is false, we should ignore such case\n      return;\n    }\n    const originalThen = proto.then;\n    // Keep a reference to the original method.\n    proto[symbolThen] = originalThen;\n    const makeResolver = function (resolveFunc, zone, source, isReject) {\n      if (!resolveFunc) {\n        return resolveFunc;\n      }\n      return val => {\n        const task = zone.scheduleMicroTask(source, () => {\n          return typeof resolveFunc === 'function' ? resolveFunc(val) : isReject ? Promise.reject(val) : val;\n        }, undefined, () => {});\n        return zone.runGuarded(() => {\n          return task.invoke();\n        }, undefined, []);\n      };\n    };\n    Ctor.prototype.then = function (onResolve, onReject) {\n      const zone = Zone.current;\n      return originalThen.call(this, makeResolver(onResolve, zone, 'Promise.prototype.then', false), makeResolver(onReject, zone, 'Promise.prototype.reject', true));\n    };\n    Ctor[symbolThenPatched] = true;\n  }\n  api.patchThen = patchThen;\n  if (Promise) {\n    patchThen(Promise);\n  }\n  global[api.symbol('Promise')] = Promise;\n  return Promise;\n});\n\n/**\n * Suppress closure compiler errors about unknown 'Zone' variable\n * @fileoverview\n * @suppress {undefinedVars,globalThis,missingRequire}\n */\n/// <reference types=\"node\"/>\n// issue #989, to reduce bundle size, use short name\n/** Object.getOwnPropertyDescriptor */\nconst ObjectGetOwnPropertyDescriptor = Object.getOwnPropertyDescriptor;\n/** Object.defineProperty */\nconst ObjectDefineProperty = Object.defineProperty;\n/** Object.getPrototypeOf */\nconst ObjectGetPrototypeOf = Object.getPrototypeOf;\n/** Array.prototype.slice */\nconst ArraySlice = Array.prototype.slice;\n/** addEventListener string const */\nconst ADD_EVENT_LISTENER_STR = 'addEventListener';\n/** removeEventListener string const */\nconst REMOVE_EVENT_LISTENER_STR = 'removeEventListener';\n/** zoneSymbol addEventListener */\nZone.__symbol__(ADD_EVENT_LISTENER_STR);\n/** zoneSymbol removeEventListener */\nZone.__symbol__(REMOVE_EVENT_LISTENER_STR);\n/** true string const */\nconst TRUE_STR = 'true';\n/** false string const */\nconst FALSE_STR = 'false';\n/** Zone symbol prefix string const. */\nconst ZONE_SYMBOL_PREFIX = Zone.__symbol__('');\nfunction wrapWithCurrentZone(callback, source) {\n  return Zone.current.wrap(callback, source);\n}\nfunction scheduleMacroTaskWithCurrentZone(source, callback, data, customSchedule, customCancel) {\n  return Zone.current.scheduleMacroTask(source, callback, data, customSchedule, customCancel);\n}\nconst zoneSymbol = Zone.__symbol__;\nconst isWindowExists = typeof window !== 'undefined';\nconst internalWindow = isWindowExists ? window : undefined;\nconst _global = isWindowExists && internalWindow || typeof self === 'object' && self || global;\nconst REMOVE_ATTRIBUTE = 'removeAttribute';\nfunction bindArguments(args, source) {\n  for (let i = args.length - 1; i >= 0; i--) {\n    if (typeof args[i] === 'function') {\n      args[i] = wrapWithCurrentZone(args[i], source + '_' + i);\n    }\n  }\n  return args;\n}\nfunction isPropertyWritable(propertyDesc) {\n  if (!propertyDesc) {\n    return true;\n  }\n  if (propertyDesc.writable === false) {\n    return false;\n  }\n  return !(typeof propertyDesc.get === 'function' && typeof propertyDesc.set === 'undefined');\n}\nconst isWebWorker = typeof WorkerGlobalScope !== 'undefined' && self instanceof WorkerGlobalScope;\n// Make sure to access `process` through `_global` so that WebPack does not accidentally browserify\n// this code.\nconst isNode = !('nw' in _global) && typeof _global.process !== 'undefined' && {}.toString.call(_global.process) === '[object process]';\nconst isBrowser = !isNode && !isWebWorker && !!(isWindowExists && internalWindow['HTMLElement']);\n// we are in electron of nw, so we are both browser and nodejs\n// Make sure to access `process` through `_global` so that WebPack does not accidentally browserify\n// this code.\nconst isMix = typeof _global.process !== 'undefined' && {}.toString.call(_global.process) === '[object process]' && !isWebWorker && !!(isWindowExists && internalWindow['HTMLElement']);\nconst zoneSymbolEventNames$1 = {};\nconst wrapFn = function (event) {\n  // https://github.com/angular/zone.js/issues/911, in IE, sometimes\n  // event will be undefined, so we need to use window.event\n  event = event || _global.event;\n  if (!event) {\n    return;\n  }\n  let eventNameSymbol = zoneSymbolEventNames$1[event.type];\n  if (!eventNameSymbol) {\n    eventNameSymbol = zoneSymbolEventNames$1[event.type] = zoneSymbol('ON_PROPERTY' + event.type);\n  }\n  const target = this || event.target || _global;\n  const listener = target[eventNameSymbol];\n  let result;\n  if (isBrowser && target === internalWindow && event.type === 'error') {\n    // window.onerror have different signature\n    // https://developer.mozilla.org/en-US/docs/Web/API/GlobalEventHandlers/onerror#window.onerror\n    // and onerror callback will prevent default when callback return true\n    const errorEvent = event;\n    result = listener && listener.call(this, errorEvent.message, errorEvent.filename, errorEvent.lineno, errorEvent.colno, errorEvent.error);\n    if (result === true) {\n      event.preventDefault();\n    }\n  } else {\n    result = listener && listener.apply(this, arguments);\n    if (result != undefined && !result) {\n      event.preventDefault();\n    }\n  }\n  return result;\n};\nfunction patchProperty(obj, prop, prototype) {\n  let desc = ObjectGetOwnPropertyDescriptor(obj, prop);\n  if (!desc && prototype) {\n    // when patch window object, use prototype to check prop exist or not\n    const prototypeDesc = ObjectGetOwnPropertyDescriptor(prototype, prop);\n    if (prototypeDesc) {\n      desc = {\n        enumerable: true,\n        configurable: true\n      };\n    }\n  }\n  // if the descriptor not exists or is not configurable\n  // just return\n  if (!desc || !desc.configurable) {\n    return;\n  }\n  const onPropPatchedSymbol = zoneSymbol('on' + prop + 'patched');\n  if (obj.hasOwnProperty(onPropPatchedSymbol) && obj[onPropPatchedSymbol]) {\n    return;\n  }\n  // A property descriptor cannot have getter/setter and be writable\n  // deleting the writable and value properties avoids this error:\n  //\n  // TypeError: property descriptors must not specify a value or be writable when a\n  // getter or setter has been specified\n  delete desc.writable;\n  delete desc.value;\n  const originalDescGet = desc.get;\n  const originalDescSet = desc.set;\n  // slice(2) cuz 'onclick' -> 'click', etc\n  const eventName = prop.slice(2);\n  let eventNameSymbol = zoneSymbolEventNames$1[eventName];\n  if (!eventNameSymbol) {\n    eventNameSymbol = zoneSymbolEventNames$1[eventName] = zoneSymbol('ON_PROPERTY' + eventName);\n  }\n  desc.set = function (newValue) {\n    // in some of windows's onproperty callback, this is undefined\n    // so we need to check it\n    let target = this;\n    if (!target && obj === _global) {\n      target = _global;\n    }\n    if (!target) {\n      return;\n    }\n    const previousValue = target[eventNameSymbol];\n    if (typeof previousValue === 'function') {\n      target.removeEventListener(eventName, wrapFn);\n    }\n    // issue #978, when onload handler was added before loading zone.js\n    // we should remove it with originalDescSet\n    originalDescSet && originalDescSet.call(target, null);\n    target[eventNameSymbol] = newValue;\n    if (typeof newValue === 'function') {\n      target.addEventListener(eventName, wrapFn, false);\n    }\n  };\n  // The getter would return undefined for unassigned properties but the default value of an\n  // unassigned property is null\n  desc.get = function () {\n    // in some of windows's onproperty callback, this is undefined\n    // so we need to check it\n    let target = this;\n    if (!target && obj === _global) {\n      target = _global;\n    }\n    if (!target) {\n      return null;\n    }\n    const listener = target[eventNameSymbol];\n    if (listener) {\n      return listener;\n    } else if (originalDescGet) {\n      // result will be null when use inline event attribute,\n      // such as <button onclick=\"func();\">OK</button>\n      // because the onclick function is internal raw uncompiled handler\n      // the onclick will be evaluated when first time event was triggered or\n      // the property is accessed, https://github.com/angular/zone.js/issues/525\n      // so we should use original native get to retrieve the handler\n      let value = originalDescGet.call(this);\n      if (value) {\n        desc.set.call(this, value);\n        if (typeof target[REMOVE_ATTRIBUTE] === 'function') {\n          target.removeAttribute(prop);\n        }\n        return value;\n      }\n    }\n    return null;\n  };\n  ObjectDefineProperty(obj, prop, desc);\n  obj[onPropPatchedSymbol] = true;\n}\nfunction patchOnProperties(obj, properties, prototype) {\n  if (properties) {\n    for (let i = 0; i < properties.length; i++) {\n      patchProperty(obj, 'on' + properties[i], prototype);\n    }\n  } else {\n    const onProperties = [];\n    for (const prop in obj) {\n      if (prop.slice(0, 2) == 'on') {\n        onProperties.push(prop);\n      }\n    }\n    for (let j = 0; j < onProperties.length; j++) {\n      patchProperty(obj, onProperties[j], prototype);\n    }\n  }\n}\nzoneSymbol('originalInstance');\nfunction copySymbolProperties(src, dest) {\n  if (typeof Object.getOwnPropertySymbols !== 'function') {\n    return;\n  }\n  const symbols = Object.getOwnPropertySymbols(src);\n  symbols.forEach(symbol => {\n    const desc = Object.getOwnPropertyDescriptor(src, symbol);\n    Object.defineProperty(dest, symbol, {\n      get: function () {\n        return src[symbol];\n      },\n      set: function (value) {\n        if (desc && (!desc.writable || typeof desc.set !== 'function')) {\n          // if src[symbol] is not writable or not have a setter, just return\n          return;\n        }\n        src[symbol] = value;\n      },\n      enumerable: desc ? desc.enumerable : true,\n      configurable: desc ? desc.configurable : true\n    });\n  });\n}\nlet shouldCopySymbolProperties = false;\nfunction setShouldCopySymbolProperties(flag) {\n  shouldCopySymbolProperties = flag;\n}\nfunction patchMethod(target, name, patchFn) {\n  let proto = target;\n  while (proto && !proto.hasOwnProperty(name)) {\n    proto = ObjectGetPrototypeOf(proto);\n  }\n  if (!proto && target[name]) {\n    // somehow we did not find it, but we can see it. This happens on IE for Window properties.\n    proto = target;\n  }\n  const delegateName = zoneSymbol(name);\n  let delegate = null;\n  if (proto && (!(delegate = proto[delegateName]) || !proto.hasOwnProperty(delegateName))) {\n    delegate = proto[delegateName] = proto[name];\n    // check whether proto[name] is writable\n    // some property is readonly in safari, such as HtmlCanvasElement.prototype.toBlob\n    const desc = proto && ObjectGetOwnPropertyDescriptor(proto, name);\n    if (isPropertyWritable(desc)) {\n      const patchDelegate = patchFn(delegate, delegateName, name);\n      proto[name] = function () {\n        return patchDelegate(this, arguments);\n      };\n      attachOriginToPatched(proto[name], delegate);\n      if (shouldCopySymbolProperties) {\n        copySymbolProperties(delegate, proto[name]);\n      }\n    }\n  }\n  return delegate;\n}\n// TODO: @JiaLiPassion, support cancel task later if necessary\nfunction patchMacroTask(obj, funcName, metaCreator) {\n  let setNative = null;\n  function scheduleTask(task) {\n    const data = task.data;\n    data.args[data.cbIdx] = function () {\n      task.invoke.apply(this, arguments);\n    };\n    setNative.apply(data.target, data.args);\n    return task;\n  }\n  setNative = patchMethod(obj, funcName, delegate => function (self, args) {\n    const meta = metaCreator(self, args);\n    if (meta.cbIdx >= 0 && typeof args[meta.cbIdx] === 'function') {\n      return scheduleMacroTaskWithCurrentZone(meta.name, args[meta.cbIdx], meta, scheduleTask);\n    } else {\n      // cause an error by calling it directly.\n      return delegate.apply(self, args);\n    }\n  });\n}\nfunction patchMicroTask(obj, funcName, metaCreator) {\n  let setNative = null;\n  function scheduleTask(task) {\n    const data = task.data;\n    data.args[data.cbIdx] = function () {\n      task.invoke.apply(this, arguments);\n    };\n    setNative.apply(data.target, data.args);\n    return task;\n  }\n  setNative = patchMethod(obj, funcName, delegate => function (self, args) {\n    const meta = metaCreator(self, args);\n    if (meta.cbIdx >= 0 && typeof args[meta.cbIdx] === 'function') {\n      return Zone.current.scheduleMicroTask(meta.name, args[meta.cbIdx], meta, scheduleTask);\n    } else {\n      // cause an error by calling it directly.\n      return delegate.apply(self, args);\n    }\n  });\n}\nfunction attachOriginToPatched(patched, original) {\n  patched[zoneSymbol('OriginalDelegate')] = original;\n}\n\n// override Function.prototype.toString to make zone.js patched function\n// look like native function\nZone.__load_patch('toString', global => {\n  // patch Func.prototype.toString to let them look like native\n  const originalFunctionToString = Function.prototype.toString;\n  const ORIGINAL_DELEGATE_SYMBOL = zoneSymbol('OriginalDelegate');\n  const PROMISE_SYMBOL = zoneSymbol('Promise');\n  const ERROR_SYMBOL = zoneSymbol('Error');\n  const newFunctionToString = function toString() {\n    if (typeof this === 'function') {\n      const originalDelegate = this[ORIGINAL_DELEGATE_SYMBOL];\n      if (originalDelegate) {\n        if (typeof originalDelegate === 'function') {\n          return originalFunctionToString.call(originalDelegate);\n        } else {\n          return Object.prototype.toString.call(originalDelegate);\n        }\n      }\n      if (this === Promise) {\n        const nativePromise = global[PROMISE_SYMBOL];\n        if (nativePromise) {\n          return originalFunctionToString.call(nativePromise);\n        }\n      }\n      if (this === Error) {\n        const nativeError = global[ERROR_SYMBOL];\n        if (nativeError) {\n          return originalFunctionToString.call(nativeError);\n        }\n      }\n    }\n    return originalFunctionToString.call(this);\n  };\n  newFunctionToString[ORIGINAL_DELEGATE_SYMBOL] = originalFunctionToString;\n  Function.prototype.toString = newFunctionToString;\n  // patch Object.prototype.toString to let them look like native\n  const originalObjectToString = Object.prototype.toString;\n  const PROMISE_OBJECT_TO_STRING = '[object Promise]';\n  Object.prototype.toString = function () {\n    if (typeof Promise === 'function' && this instanceof Promise) {\n      return PROMISE_OBJECT_TO_STRING;\n    }\n    return originalObjectToString.call(this);\n  };\n});\nZone.__load_patch('node_util', (global, Zone, api) => {\n  api.patchOnProperties = patchOnProperties;\n  api.patchMethod = patchMethod;\n  api.bindArguments = bindArguments;\n  api.patchMacroTask = patchMacroTask;\n  setShouldCopySymbolProperties(true);\n});\n\n/**\n * @fileoverview\n * @suppress {missingRequire}\n */\nlet passiveSupported = false;\nif (typeof window !== 'undefined') {\n  try {\n    const options = Object.defineProperty({}, 'passive', {\n      get: function () {\n        passiveSupported = true;\n      }\n    });\n    // Note: We pass the `options` object as the event handler too. This is not compatible with the\n    // signature of `addEventListener` or `removeEventListener` but enables us to remove the handler\n    // without an actual handler.\n    window.addEventListener('test', options, options);\n    window.removeEventListener('test', options, options);\n  } catch (err) {\n    passiveSupported = false;\n  }\n}\n// an identifier to tell ZoneTask do not create a new invoke closure\nconst OPTIMIZED_ZONE_EVENT_TASK_DATA = {\n  useG: true\n};\nconst zoneSymbolEventNames = {};\nconst globalSources = {};\nconst EVENT_NAME_SYMBOL_REGX = new RegExp('^' + ZONE_SYMBOL_PREFIX + '(\\\\w+)(true|false)$');\nconst IMMEDIATE_PROPAGATION_SYMBOL = zoneSymbol('propagationStopped');\nfunction prepareEventNames(eventName, eventNameToString) {\n  const falseEventName = (eventNameToString ? eventNameToString(eventName) : eventName) + FALSE_STR;\n  const trueEventName = (eventNameToString ? eventNameToString(eventName) : eventName) + TRUE_STR;\n  const symbol = ZONE_SYMBOL_PREFIX + falseEventName;\n  const symbolCapture = ZONE_SYMBOL_PREFIX + trueEventName;\n  zoneSymbolEventNames[eventName] = {};\n  zoneSymbolEventNames[eventName][FALSE_STR] = symbol;\n  zoneSymbolEventNames[eventName][TRUE_STR] = symbolCapture;\n}\nfunction patchEventTarget(_global, api, apis, patchOptions) {\n  const ADD_EVENT_LISTENER = patchOptions && patchOptions.add || ADD_EVENT_LISTENER_STR;\n  const REMOVE_EVENT_LISTENER = patchOptions && patchOptions.rm || REMOVE_EVENT_LISTENER_STR;\n  const LISTENERS_EVENT_LISTENER = patchOptions && patchOptions.listeners || 'eventListeners';\n  const REMOVE_ALL_LISTENERS_EVENT_LISTENER = patchOptions && patchOptions.rmAll || 'removeAllListeners';\n  const zoneSymbolAddEventListener = zoneSymbol(ADD_EVENT_LISTENER);\n  const ADD_EVENT_LISTENER_SOURCE = '.' + ADD_EVENT_LISTENER + ':';\n  const PREPEND_EVENT_LISTENER = 'prependListener';\n  const PREPEND_EVENT_LISTENER_SOURCE = '.' + PREPEND_EVENT_LISTENER + ':';\n  const invokeTask = function (task, target, event) {\n    // for better performance, check isRemoved which is set\n    // by removeEventListener\n    if (task.isRemoved) {\n      return;\n    }\n    const delegate = task.callback;\n    if (typeof delegate === 'object' && delegate.handleEvent) {\n      // create the bind version of handleEvent when invoke\n      task.callback = event => delegate.handleEvent(event);\n      task.originalDelegate = delegate;\n    }\n    // invoke static task.invoke\n    // need to try/catch error here, otherwise, the error in one event listener\n    // will break the executions of the other event listeners. Also error will\n    // not remove the event listener when `once` options is true.\n    let error;\n    try {\n      task.invoke(task, target, [event]);\n    } catch (err) {\n      error = err;\n    }\n    const options = task.options;\n    if (options && typeof options === 'object' && options.once) {\n      // if options.once is true, after invoke once remove listener here\n      // only browser need to do this, nodejs eventEmitter will cal removeListener\n      // inside EventEmitter.once\n      const delegate = task.originalDelegate ? task.originalDelegate : task.callback;\n      target[REMOVE_EVENT_LISTENER].call(target, event.type, delegate, options);\n    }\n    return error;\n  };\n  function globalCallback(context, event, isCapture) {\n    // https://github.com/angular/zone.js/issues/911, in IE, sometimes\n    // event will be undefined, so we need to use window.event\n    event = event || _global.event;\n    if (!event) {\n      return;\n    }\n    // event.target is needed for Samsung TV and SourceBuffer\n    // || global is needed https://github.com/angular/zone.js/issues/190\n    const target = context || event.target || _global;\n    const tasks = target[zoneSymbolEventNames[event.type][isCapture ? TRUE_STR : FALSE_STR]];\n    if (tasks) {\n      const errors = [];\n      // invoke all tasks which attached to current target with given event.type and capture = false\n      // for performance concern, if task.length === 1, just invoke\n      if (tasks.length === 1) {\n        const err = invokeTask(tasks[0], target, event);\n        err && errors.push(err);\n      } else {\n        // https://github.com/angular/zone.js/issues/836\n        // copy the tasks array before invoke, to avoid\n        // the callback will remove itself or other listener\n        const copyTasks = tasks.slice();\n        for (let i = 0; i < copyTasks.length; i++) {\n          if (event && event[IMMEDIATE_PROPAGATION_SYMBOL] === true) {\n            break;\n          }\n          const err = invokeTask(copyTasks[i], target, event);\n          err && errors.push(err);\n        }\n      }\n      // Since there is only one error, we don't need to schedule microTask\n      // to throw the error.\n      if (errors.length === 1) {\n        throw errors[0];\n      } else {\n        for (let i = 0; i < errors.length; i++) {\n          const err = errors[i];\n          api.nativeScheduleMicroTask(() => {\n            throw err;\n          });\n        }\n      }\n    }\n  }\n  // global shared zoneAwareCallback to handle all event callback with capture = false\n  const globalZoneAwareCallback = function (event) {\n    return globalCallback(this, event, false);\n  };\n  // global shared zoneAwareCallback to handle all event callback with capture = true\n  const globalZoneAwareCaptureCallback = function (event) {\n    return globalCallback(this, event, true);\n  };\n  function patchEventTargetMethods(obj, patchOptions) {\n    if (!obj) {\n      return false;\n    }\n    let useGlobalCallback = true;\n    if (patchOptions && patchOptions.useG !== undefined) {\n      useGlobalCallback = patchOptions.useG;\n    }\n    const validateHandler = patchOptions && patchOptions.vh;\n    let checkDuplicate = true;\n    if (patchOptions && patchOptions.chkDup !== undefined) {\n      checkDuplicate = patchOptions.chkDup;\n    }\n    let returnTarget = false;\n    if (patchOptions && patchOptions.rt !== undefined) {\n      returnTarget = patchOptions.rt;\n    }\n    let proto = obj;\n    while (proto && !proto.hasOwnProperty(ADD_EVENT_LISTENER)) {\n      proto = ObjectGetPrototypeOf(proto);\n    }\n    if (!proto && obj[ADD_EVENT_LISTENER]) {\n      // somehow we did not find it, but we can see it. This happens on IE for Window properties.\n      proto = obj;\n    }\n    if (!proto) {\n      return false;\n    }\n    if (proto[zoneSymbolAddEventListener]) {\n      return false;\n    }\n    const eventNameToString = patchOptions && patchOptions.eventNameToString;\n    // a shared global taskData to pass data for scheduleEventTask\n    // so we do not need to create a new object just for pass some data\n    const taskData = {};\n    const nativeAddEventListener = proto[zoneSymbolAddEventListener] = proto[ADD_EVENT_LISTENER];\n    const nativeRemoveEventListener = proto[zoneSymbol(REMOVE_EVENT_LISTENER)] = proto[REMOVE_EVENT_LISTENER];\n    const nativeListeners = proto[zoneSymbol(LISTENERS_EVENT_LISTENER)] = proto[LISTENERS_EVENT_LISTENER];\n    const nativeRemoveAllListeners = proto[zoneSymbol(REMOVE_ALL_LISTENERS_EVENT_LISTENER)] = proto[REMOVE_ALL_LISTENERS_EVENT_LISTENER];\n    let nativePrependEventListener;\n    if (patchOptions && patchOptions.prepend) {\n      nativePrependEventListener = proto[zoneSymbol(patchOptions.prepend)] = proto[patchOptions.prepend];\n    }\n    /**\n     * This util function will build an option object with passive option\n     * to handle all possible input from the user.\n     */\n    function buildEventListenerOptions(options, passive) {\n      if (!passiveSupported && typeof options === 'object' && options) {\n        // doesn't support passive but user want to pass an object as options.\n        // this will not work on some old browser, so we just pass a boolean\n        // as useCapture parameter\n        return !!options.capture;\n      }\n      if (!passiveSupported || !passive) {\n        return options;\n      }\n      if (typeof options === 'boolean') {\n        return {\n          capture: options,\n          passive: true\n        };\n      }\n      if (!options) {\n        return {\n          passive: true\n        };\n      }\n      if (typeof options === 'object' && options.passive !== false) {\n        return {\n          ...options,\n          passive: true\n        };\n      }\n      return options;\n    }\n    const customScheduleGlobal = function (task) {\n      // if there is already a task for the eventName + capture,\n      // just return, because we use the shared globalZoneAwareCallback here.\n      if (taskData.isExisting) {\n        return;\n      }\n      return nativeAddEventListener.call(taskData.target, taskData.eventName, taskData.capture ? globalZoneAwareCaptureCallback : globalZoneAwareCallback, taskData.options);\n    };\n    const customCancelGlobal = function (task) {\n      // if task is not marked as isRemoved, this call is directly\n      // from Zone.prototype.cancelTask, we should remove the task\n      // from tasksList of target first\n      if (!task.isRemoved) {\n        const symbolEventNames = zoneSymbolEventNames[task.eventName];\n        let symbolEventName;\n        if (symbolEventNames) {\n          symbolEventName = symbolEventNames[task.capture ? TRUE_STR : FALSE_STR];\n        }\n        const existingTasks = symbolEventName && task.target[symbolEventName];\n        if (existingTasks) {\n          for (let i = 0; i < existingTasks.length; i++) {\n            const existingTask = existingTasks[i];\n            if (existingTask === task) {\n              existingTasks.splice(i, 1);\n              // set isRemoved to data for faster invokeTask check\n              task.isRemoved = true;\n              if (existingTasks.length === 0) {\n                // all tasks for the eventName + capture have gone,\n                // remove globalZoneAwareCallback and remove the task cache from target\n                task.allRemoved = true;\n                task.target[symbolEventName] = null;\n              }\n              break;\n            }\n          }\n        }\n      }\n      // if all tasks for the eventName + capture have gone,\n      // we will really remove the global event callback,\n      // if not, return\n      if (!task.allRemoved) {\n        return;\n      }\n      return nativeRemoveEventListener.call(task.target, task.eventName, task.capture ? globalZoneAwareCaptureCallback : globalZoneAwareCallback, task.options);\n    };\n    const customScheduleNonGlobal = function (task) {\n      return nativeAddEventListener.call(taskData.target, taskData.eventName, task.invoke, taskData.options);\n    };\n    const customSchedulePrepend = function (task) {\n      return nativePrependEventListener.call(taskData.target, taskData.eventName, task.invoke, taskData.options);\n    };\n    const customCancelNonGlobal = function (task) {\n      return nativeRemoveEventListener.call(task.target, task.eventName, task.invoke, task.options);\n    };\n    const customSchedule = useGlobalCallback ? customScheduleGlobal : customScheduleNonGlobal;\n    const customCancel = useGlobalCallback ? customCancelGlobal : customCancelNonGlobal;\n    const compareTaskCallbackVsDelegate = function (task, delegate) {\n      const typeOfDelegate = typeof delegate;\n      return typeOfDelegate === 'function' && task.callback === delegate || typeOfDelegate === 'object' && task.originalDelegate === delegate;\n    };\n    const compare = patchOptions && patchOptions.diff ? patchOptions.diff : compareTaskCallbackVsDelegate;\n    const unpatchedEvents = Zone[zoneSymbol('UNPATCHED_EVENTS')];\n    const passiveEvents = _global[zoneSymbol('PASSIVE_EVENTS')];\n    const makeAddListener = function (nativeListener, addSource, customScheduleFn, customCancelFn, returnTarget = false, prepend = false) {\n      return function () {\n        const target = this || _global;\n        let eventName = arguments[0];\n        if (patchOptions && patchOptions.transferEventName) {\n          eventName = patchOptions.transferEventName(eventName);\n        }\n        let delegate = arguments[1];\n        if (!delegate) {\n          return nativeListener.apply(this, arguments);\n        }\n        if (isNode && eventName === 'uncaughtException') {\n          // don't patch uncaughtException of nodejs to prevent endless loop\n          return nativeListener.apply(this, arguments);\n        }\n        // don't create the bind delegate function for handleEvent\n        // case here to improve addEventListener performance\n        // we will create the bind delegate when invoke\n        let isHandleEvent = false;\n        if (typeof delegate !== 'function') {\n          if (!delegate.handleEvent) {\n            return nativeListener.apply(this, arguments);\n          }\n          isHandleEvent = true;\n        }\n        if (validateHandler && !validateHandler(nativeListener, delegate, target, arguments)) {\n          return;\n        }\n        const passive = passiveSupported && !!passiveEvents && passiveEvents.indexOf(eventName) !== -1;\n        const options = buildEventListenerOptions(arguments[2], passive);\n        if (unpatchedEvents) {\n          // check unpatched list\n          for (let i = 0; i < unpatchedEvents.length; i++) {\n            if (eventName === unpatchedEvents[i]) {\n              if (passive) {\n                return nativeListener.call(target, eventName, delegate, options);\n              } else {\n                return nativeListener.apply(this, arguments);\n              }\n            }\n          }\n        }\n        const capture = !options ? false : typeof options === 'boolean' ? true : options.capture;\n        const once = options && typeof options === 'object' ? options.once : false;\n        const zone = Zone.current;\n        let symbolEventNames = zoneSymbolEventNames[eventName];\n        if (!symbolEventNames) {\n          prepareEventNames(eventName, eventNameToString);\n          symbolEventNames = zoneSymbolEventNames[eventName];\n        }\n        const symbolEventName = symbolEventNames[capture ? TRUE_STR : FALSE_STR];\n        let existingTasks = target[symbolEventName];\n        let isExisting = false;\n        if (existingTasks) {\n          // already have task registered\n          isExisting = true;\n          if (checkDuplicate) {\n            for (let i = 0; i < existingTasks.length; i++) {\n              if (compare(existingTasks[i], delegate)) {\n                // same callback, same capture, same event name, just return\n                return;\n              }\n            }\n          }\n        } else {\n          existingTasks = target[symbolEventName] = [];\n        }\n        let source;\n        const constructorName = target.constructor['name'];\n        const targetSource = globalSources[constructorName];\n        if (targetSource) {\n          source = targetSource[eventName];\n        }\n        if (!source) {\n          source = constructorName + addSource + (eventNameToString ? eventNameToString(eventName) : eventName);\n        }\n        // do not create a new object as task.data to pass those things\n        // just use the global shared one\n        taskData.options = options;\n        if (once) {\n          // if addEventListener with once options, we don't pass it to\n          // native addEventListener, instead we keep the once setting\n          // and handle ourselves.\n          taskData.options.once = false;\n        }\n        taskData.target = target;\n        taskData.capture = capture;\n        taskData.eventName = eventName;\n        taskData.isExisting = isExisting;\n        const data = useGlobalCallback ? OPTIMIZED_ZONE_EVENT_TASK_DATA : undefined;\n        // keep taskData into data to allow onScheduleEventTask to access the task information\n        if (data) {\n          data.taskData = taskData;\n        }\n        const task = zone.scheduleEventTask(source, delegate, data, customScheduleFn, customCancelFn);\n        // should clear taskData.target to avoid memory leak\n        // issue, https://github.com/angular/angular/issues/20442\n        taskData.target = null;\n        // need to clear up taskData because it is a global object\n        if (data) {\n          data.taskData = null;\n        }\n        // have to save those information to task in case\n        // application may call task.zone.cancelTask() directly\n        if (once) {\n          options.once = true;\n        }\n        if (!(!passiveSupported && typeof task.options === 'boolean')) {\n          // if not support passive, and we pass an option object\n          // to addEventListener, we should save the options to task\n          task.options = options;\n        }\n        task.target = target;\n        task.capture = capture;\n        task.eventName = eventName;\n        if (isHandleEvent) {\n          // save original delegate for compare to check duplicate\n          task.originalDelegate = delegate;\n        }\n        if (!prepend) {\n          existingTasks.push(task);\n        } else {\n          existingTasks.unshift(task);\n        }\n        if (returnTarget) {\n          return target;\n        }\n      };\n    };\n    proto[ADD_EVENT_LISTENER] = makeAddListener(nativeAddEventListener, ADD_EVENT_LISTENER_SOURCE, customSchedule, customCancel, returnTarget);\n    if (nativePrependEventListener) {\n      proto[PREPEND_EVENT_LISTENER] = makeAddListener(nativePrependEventListener, PREPEND_EVENT_LISTENER_SOURCE, customSchedulePrepend, customCancel, returnTarget, true);\n    }\n    proto[REMOVE_EVENT_LISTENER] = function () {\n      const target = this || _global;\n      let eventName = arguments[0];\n      if (patchOptions && patchOptions.transferEventName) {\n        eventName = patchOptions.transferEventName(eventName);\n      }\n      const options = arguments[2];\n      const capture = !options ? false : typeof options === 'boolean' ? true : options.capture;\n      const delegate = arguments[1];\n      if (!delegate) {\n        return nativeRemoveEventListener.apply(this, arguments);\n      }\n      if (validateHandler && !validateHandler(nativeRemoveEventListener, delegate, target, arguments)) {\n        return;\n      }\n      const symbolEventNames = zoneSymbolEventNames[eventName];\n      let symbolEventName;\n      if (symbolEventNames) {\n        symbolEventName = symbolEventNames[capture ? TRUE_STR : FALSE_STR];\n      }\n      const existingTasks = symbolEventName && target[symbolEventName];\n      if (existingTasks) {\n        for (let i = 0; i < existingTasks.length; i++) {\n          const existingTask = existingTasks[i];\n          if (compare(existingTask, delegate)) {\n            existingTasks.splice(i, 1);\n            // set isRemoved to data for faster invokeTask check\n            existingTask.isRemoved = true;\n            if (existingTasks.length === 0) {\n              // all tasks for the eventName + capture have gone,\n              // remove globalZoneAwareCallback and remove the task cache from target\n              existingTask.allRemoved = true;\n              target[symbolEventName] = null;\n              // in the target, we have an event listener which is added by on_property\n              // such as target.onclick = function() {}, so we need to clear this internal\n              // property too if all delegates all removed\n              if (typeof eventName === 'string') {\n                const onPropertySymbol = ZONE_SYMBOL_PREFIX + 'ON_PROPERTY' + eventName;\n                target[onPropertySymbol] = null;\n              }\n            }\n            existingTask.zone.cancelTask(existingTask);\n            if (returnTarget) {\n              return target;\n            }\n            return;\n          }\n        }\n      }\n      // issue 930, didn't find the event name or callback\n      // from zone kept existingTasks, the callback maybe\n      // added outside of zone, we need to call native removeEventListener\n      // to try to remove it.\n      return nativeRemoveEventListener.apply(this, arguments);\n    };\n    proto[LISTENERS_EVENT_LISTENER] = function () {\n      const target = this || _global;\n      let eventName = arguments[0];\n      if (patchOptions && patchOptions.transferEventName) {\n        eventName = patchOptions.transferEventName(eventName);\n      }\n      const listeners = [];\n      const tasks = findEventTasks(target, eventNameToString ? eventNameToString(eventName) : eventName);\n      for (let i = 0; i < tasks.length; i++) {\n        const task = tasks[i];\n        let delegate = task.originalDelegate ? task.originalDelegate : task.callback;\n        listeners.push(delegate);\n      }\n      return listeners;\n    };\n    proto[REMOVE_ALL_LISTENERS_EVENT_LISTENER] = function () {\n      const target = this || _global;\n      let eventName = arguments[0];\n      if (!eventName) {\n        const keys = Object.keys(target);\n        for (let i = 0; i < keys.length; i++) {\n          const prop = keys[i];\n          const match = EVENT_NAME_SYMBOL_REGX.exec(prop);\n          let evtName = match && match[1];\n          // in nodejs EventEmitter, removeListener event is\n          // used for monitoring the removeListener call,\n          // so just keep removeListener eventListener until\n          // all other eventListeners are removed\n          if (evtName && evtName !== 'removeListener') {\n            this[REMOVE_ALL_LISTENERS_EVENT_LISTENER].call(this, evtName);\n          }\n        }\n        // remove removeListener listener finally\n        this[REMOVE_ALL_LISTENERS_EVENT_LISTENER].call(this, 'removeListener');\n      } else {\n        if (patchOptions && patchOptions.transferEventName) {\n          eventName = patchOptions.transferEventName(eventName);\n        }\n        const symbolEventNames = zoneSymbolEventNames[eventName];\n        if (symbolEventNames) {\n          const symbolEventName = symbolEventNames[FALSE_STR];\n          const symbolCaptureEventName = symbolEventNames[TRUE_STR];\n          const tasks = target[symbolEventName];\n          const captureTasks = target[symbolCaptureEventName];\n          if (tasks) {\n            const removeTasks = tasks.slice();\n            for (let i = 0; i < removeTasks.length; i++) {\n              const task = removeTasks[i];\n              let delegate = task.originalDelegate ? task.originalDelegate : task.callback;\n              this[REMOVE_EVENT_LISTENER].call(this, eventName, delegate, task.options);\n            }\n          }\n          if (captureTasks) {\n            const removeTasks = captureTasks.slice();\n            for (let i = 0; i < removeTasks.length; i++) {\n              const task = removeTasks[i];\n              let delegate = task.originalDelegate ? task.originalDelegate : task.callback;\n              this[REMOVE_EVENT_LISTENER].call(this, eventName, delegate, task.options);\n            }\n          }\n        }\n      }\n      if (returnTarget) {\n        return this;\n      }\n    };\n    // for native toString patch\n    attachOriginToPatched(proto[ADD_EVENT_LISTENER], nativeAddEventListener);\n    attachOriginToPatched(proto[REMOVE_EVENT_LISTENER], nativeRemoveEventListener);\n    if (nativeRemoveAllListeners) {\n      attachOriginToPatched(proto[REMOVE_ALL_LISTENERS_EVENT_LISTENER], nativeRemoveAllListeners);\n    }\n    if (nativeListeners) {\n      attachOriginToPatched(proto[LISTENERS_EVENT_LISTENER], nativeListeners);\n    }\n    return true;\n  }\n  let results = [];\n  for (let i = 0; i < apis.length; i++) {\n    results[i] = patchEventTargetMethods(apis[i], patchOptions);\n  }\n  return results;\n}\nfunction findEventTasks(target, eventName) {\n  if (!eventName) {\n    const foundTasks = [];\n    for (let prop in target) {\n      const match = EVENT_NAME_SYMBOL_REGX.exec(prop);\n      let evtName = match && match[1];\n      if (evtName && (!eventName || evtName === eventName)) {\n        const tasks = target[prop];\n        if (tasks) {\n          for (let i = 0; i < tasks.length; i++) {\n            foundTasks.push(tasks[i]);\n          }\n        }\n      }\n    }\n    return foundTasks;\n  }\n  let symbolEventName = zoneSymbolEventNames[eventName];\n  if (!symbolEventName) {\n    prepareEventNames(eventName);\n    symbolEventName = zoneSymbolEventNames[eventName];\n  }\n  const captureFalseTasks = target[symbolEventName[FALSE_STR]];\n  const captureTrueTasks = target[symbolEventName[TRUE_STR]];\n  if (!captureFalseTasks) {\n    return captureTrueTasks ? captureTrueTasks.slice() : [];\n  } else {\n    return captureTrueTasks ? captureFalseTasks.concat(captureTrueTasks) : captureFalseTasks.slice();\n  }\n}\nZone.__load_patch('EventEmitter', (global, Zone, api) => {\n  // For EventEmitter\n  const EE_ADD_LISTENER = 'addListener';\n  const EE_PREPEND_LISTENER = 'prependListener';\n  const EE_REMOVE_LISTENER = 'removeListener';\n  const EE_REMOVE_ALL_LISTENER = 'removeAllListeners';\n  const EE_LISTENERS = 'listeners';\n  const EE_ON = 'on';\n  const EE_OFF = 'off';\n  const compareTaskCallbackVsDelegate = function (task, delegate) {\n    // same callback, same capture, same event name, just return\n    return task.callback === delegate || task.callback.listener === delegate;\n  };\n  const eventNameToString = function (eventName) {\n    if (typeof eventName === 'string') {\n      return eventName;\n    }\n    if (!eventName) {\n      return '';\n    }\n    return eventName.toString().replace('(', '_').replace(')', '_');\n  };\n  function patchEventEmitterMethods(obj) {\n    const result = patchEventTarget(global, api, [obj], {\n      useG: false,\n      add: EE_ADD_LISTENER,\n      rm: EE_REMOVE_LISTENER,\n      prepend: EE_PREPEND_LISTENER,\n      rmAll: EE_REMOVE_ALL_LISTENER,\n      listeners: EE_LISTENERS,\n      chkDup: false,\n      rt: true,\n      diff: compareTaskCallbackVsDelegate,\n      eventNameToString: eventNameToString\n    });\n    if (result && result[0]) {\n      obj[EE_ON] = obj[EE_ADD_LISTENER];\n      obj[EE_OFF] = obj[EE_REMOVE_LISTENER];\n    }\n  }\n  // EventEmitter\n  let events;\n  try {\n    events = require('events');\n  } catch (err) {}\n  if (events && events.EventEmitter) {\n    patchEventEmitterMethods(events.EventEmitter.prototype);\n  }\n});\nZone.__load_patch('fs', () => {\n  let fs;\n  try {\n    fs = require('fs');\n  } catch (err) {}\n  // watch, watchFile, unwatchFile has been patched\n  // because EventEmitter has been patched\n  const TO_PATCH_MACROTASK_METHODS = ['access', 'appendFile', 'chmod', 'chown', 'close', 'exists', 'fchmod', 'fchown', 'fdatasync', 'fstat', 'fsync', 'ftruncate', 'futimes', 'lchmod', 'lchown', 'link', 'lstat', 'mkdir', 'mkdtemp', 'open', 'read', 'readdir', 'readFile', 'readlink', 'realpath', 'rename', 'rmdir', 'stat', 'symlink', 'truncate', 'unlink', 'utimes', 'write', 'writeFile'];\n  if (fs) {\n    TO_PATCH_MACROTASK_METHODS.filter(name => !!fs[name] && typeof fs[name] === 'function').forEach(name => {\n      patchMacroTask(fs, name, (self, args) => {\n        return {\n          name: 'fs.' + name,\n          args: args,\n          cbIdx: args.length > 0 ? args.length - 1 : -1,\n          target: self\n        };\n      });\n    });\n  }\n});\n\n/**\n * @fileoverview\n * @suppress {missingRequire}\n */\nconst taskSymbol = zoneSymbol('zoneTask');\nfunction patchTimer(window, setName, cancelName, nameSuffix) {\n  let setNative = null;\n  let clearNative = null;\n  setName += nameSuffix;\n  cancelName += nameSuffix;\n  const tasksByHandleId = {};\n  function scheduleTask(task) {\n    const data = task.data;\n    data.args[0] = function () {\n      return task.invoke.apply(this, arguments);\n    };\n    data.handleId = setNative.apply(window, data.args);\n    return task;\n  }\n  function clearTask(task) {\n    return clearNative.call(window, task.data.handleId);\n  }\n  setNative = patchMethod(window, setName, delegate => function (self, args) {\n    if (typeof args[0] === 'function') {\n      const options = {\n        isPeriodic: nameSuffix === 'Interval',\n        delay: nameSuffix === 'Timeout' || nameSuffix === 'Interval' ? args[1] || 0 : undefined,\n        args: args\n      };\n      const callback = args[0];\n      args[0] = function timer() {\n        try {\n          return callback.apply(this, arguments);\n        } finally {\n          // issue-934, task will be cancelled\n          // even it is a periodic task such as\n          // setInterval\n          // https://github.com/angular/angular/issues/40387\n          // Cleanup tasksByHandleId should be handled before scheduleTask\n          // Since some zoneSpec may intercept and doesn't trigger\n          // scheduleFn(scheduleTask) provided here.\n          if (!options.isPeriodic) {\n            if (typeof options.handleId === 'number') {\n              // in non-nodejs env, we remove timerId\n              // from local cache\n              delete tasksByHandleId[options.handleId];\n            } else if (options.handleId) {\n              // Node returns complex objects as handleIds\n              // we remove task reference from timer object\n              options.handleId[taskSymbol] = null;\n            }\n          }\n        }\n      };\n      const task = scheduleMacroTaskWithCurrentZone(setName, args[0], options, scheduleTask, clearTask);\n      if (!task) {\n        return task;\n      }\n      // Node.js must additionally support the ref and unref functions.\n      const handle = task.data.handleId;\n      if (typeof handle === 'number') {\n        // for non nodejs env, we save handleId: task\n        // mapping in local cache for clearTimeout\n        tasksByHandleId[handle] = task;\n      } else if (handle) {\n        // for nodejs env, we save task\n        // reference in timerId Object for clearTimeout\n        handle[taskSymbol] = task;\n      }\n      // check whether handle is null, because some polyfill or browser\n      // may return undefined from setTimeout/setInterval/setImmediate/requestAnimationFrame\n      if (handle && handle.ref && handle.unref && typeof handle.ref === 'function' && typeof handle.unref === 'function') {\n        task.ref = handle.ref.bind(handle);\n        task.unref = handle.unref.bind(handle);\n      }\n      if (typeof handle === 'number' || handle) {\n        return handle;\n      }\n      return task;\n    } else {\n      // cause an error by calling it directly.\n      return delegate.apply(window, args);\n    }\n  });\n  clearNative = patchMethod(window, cancelName, delegate => function (self, args) {\n    const id = args[0];\n    let task;\n    if (typeof id === 'number') {\n      // non nodejs env.\n      task = tasksByHandleId[id];\n    } else {\n      // nodejs env.\n      task = id && id[taskSymbol];\n      // other environments.\n      if (!task) {\n        task = id;\n      }\n    }\n    if (task && typeof task.type === 'string') {\n      if (task.state !== 'notScheduled' && (task.cancelFn && task.data.isPeriodic || task.runCount === 0)) {\n        if (typeof id === 'number') {\n          delete tasksByHandleId[id];\n        } else if (id) {\n          id[taskSymbol] = null;\n        }\n        // Do not cancel already canceled functions\n        task.zone.cancelTask(task);\n      }\n    } else {\n      // cause an error by calling it directly.\n      delegate.apply(window, args);\n    }\n  });\n}\nconst set = 'set';\nconst clear = 'clear';\nZone.__load_patch('node_timers', (global, Zone) => {\n  // Timers\n  let globalUseTimeoutFromTimer = false;\n  try {\n    const timers = require('timers');\n    let globalEqualTimersTimeout = global.setTimeout === timers.setTimeout;\n    if (!globalEqualTimersTimeout && !isMix) {\n      // 1. if isMix, then we are in mix environment such as Electron\n      // we should only patch timers.setTimeout because global.setTimeout\n      // have been patched\n      // 2. if global.setTimeout not equal timers.setTimeout, check\n      // whether global.setTimeout use timers.setTimeout or not\n      const originSetTimeout = timers.setTimeout;\n      timers.setTimeout = function () {\n        globalUseTimeoutFromTimer = true;\n        return originSetTimeout.apply(this, arguments);\n      };\n      const detectTimeout = global.setTimeout(() => {}, 100);\n      clearTimeout(detectTimeout);\n      timers.setTimeout = originSetTimeout;\n    }\n    patchTimer(timers, set, clear, 'Timeout');\n    patchTimer(timers, set, clear, 'Interval');\n    patchTimer(timers, set, clear, 'Immediate');\n  } catch (error) {\n    // timers module not exists, for example, when we using nativeScript\n    // timers is not available\n  }\n  if (isMix) {\n    // if we are in mix environment, such as Electron,\n    // the global.setTimeout has already been patched,\n    // so we just patch timers.setTimeout\n    return;\n  }\n  if (!globalUseTimeoutFromTimer) {\n    // 1. global setTimeout equals timers setTimeout\n    // 2. or global don't use timers setTimeout(maybe some other library patch setTimeout)\n    // 3. or load timers module error happens, we should patch global setTimeout\n    patchTimer(global, set, clear, 'Timeout');\n    patchTimer(global, set, clear, 'Interval');\n    patchTimer(global, set, clear, 'Immediate');\n  } else {\n    // global use timers setTimeout, but not equals\n    // this happens when use nodejs v0.10.x, global setTimeout will\n    // use a lazy load version of timers setTimeout\n    // we should not double patch timer's setTimeout\n    // so we only store the __symbol__ for consistency\n    global[Zone.__symbol__('setTimeout')] = global.setTimeout;\n    global[Zone.__symbol__('setInterval')] = global.setInterval;\n    global[Zone.__symbol__('setImmediate')] = global.setImmediate;\n  }\n});\n// patch process related methods\nZone.__load_patch('nextTick', () => {\n  // patch nextTick as microTask\n  patchMicroTask(process, 'nextTick', (self, args) => {\n    return {\n      name: 'process.nextTick',\n      args: args,\n      cbIdx: args.length > 0 && typeof args[0] === 'function' ? 0 : -1,\n      target: process\n    };\n  });\n});\nZone.__load_patch('handleUnhandledPromiseRejection', (global, Zone, api) => {\n  Zone[api.symbol('unhandledPromiseRejectionHandler')] = findProcessPromiseRejectionHandler('unhandledRejection');\n  Zone[api.symbol('rejectionHandledHandler')] = findProcessPromiseRejectionHandler('rejectionHandled');\n  // handle unhandled promise rejection\n  function findProcessPromiseRejectionHandler(evtName) {\n    return function (e) {\n      const eventTasks = findEventTasks(process, evtName);\n      eventTasks.forEach(eventTask => {\n        // process has added unhandledrejection event listener\n        // trigger the event listener\n        if (evtName === 'unhandledRejection') {\n          eventTask.invoke(e.rejection, e.promise);\n        } else if (evtName === 'rejectionHandled') {\n          eventTask.invoke(e.promise);\n        }\n      });\n    };\n  }\n});\n// Crypto\nZone.__load_patch('crypto', () => {\n  let crypto;\n  try {\n    crypto = require('crypto');\n  } catch (err) {}\n  // use the generic patchMacroTask to patch crypto\n  if (crypto) {\n    const methodNames = ['randomBytes', 'pbkdf2'];\n    methodNames.forEach(name => {\n      patchMacroTask(crypto, name, (self, args) => {\n        return {\n          name: 'crypto.' + name,\n          args: args,\n          cbIdx: args.length > 0 && typeof args[args.length - 1] === 'function' ? args.length - 1 : -1,\n          target: crypto\n        };\n      });\n    });\n  }\n});\nZone.__load_patch('console', (global, Zone) => {\n  const consoleMethods = ['dir', 'log', 'info', 'error', 'warn', 'assert', 'debug', 'timeEnd', 'trace'];\n  consoleMethods.forEach(m => {\n    const originalMethod = console[Zone.__symbol__(m)] = console[m];\n    if (originalMethod) {\n      console[m] = function () {\n        const args = ArraySlice.call(arguments);\n        if (Zone.current === Zone.root) {\n          return originalMethod.apply(this, args);\n        } else {\n          return Zone.root.run(originalMethod, this, args);\n        }\n      };\n    }\n  });\n});","map":{"version":3,"names":["global","performance","mark","name","performanceMeasure","label","symbolPrefix","__symbol__","checkDuplicate","Error","Zone","assertZonePatched","patches","root","zone","current","parent","_currentZoneFrame","currentTask","_currentTask","__load_patch","fn","ignoreDuplicate","hasOwnProperty","perfName","_api","_parent","_name","constructor","zoneSpec","_properties","properties","_zoneDelegate","_ZoneDelegate","get","key","getZoneWith","fork","wrap","callback","source","_callback","intercept","runGuarded","arguments","run","applyThis","applyArgs","invoke","error","handleError","runTask","task","NO_ZONE","state","notScheduled","type","eventTask","macroTask","reEntryGuard","running","_transitionTo","scheduled","runCount","previousTask","data","isPeriodic","cancelFn","undefined","invokeTask","unknown","_updateTaskCount","scheduleTask","newZone","scheduling","zoneDelegates","_zoneDelegates","_zone","err","scheduleMicroTask","customSchedule","ZoneTask","microTask","scheduleMacroTask","customCancel","scheduleEventTask","cancelTask","canceling","count","i","length","DELEGATE_ZS","onHasTask","delegate","_","target","hasTaskState","hasTask","onScheduleTask","onInvokeTask","onCancelTask","parentDelegate","_taskCounts","_parentDelegate","_forkZS","onFork","_forkDlgt","_forkCurrZone","_interceptZS","onIntercept","_interceptDlgt","_interceptCurrZone","_invokeZS","onInvoke","_invokeDlgt","_invokeCurrZone","_handleErrorZS","onHandleError","_handleErrorDlgt","_handleErrorCurrZone","_scheduleTaskZS","_scheduleTaskDlgt","_scheduleTaskCurrZone","_invokeTaskZS","_invokeTaskDlgt","_invokeTaskCurrZone","_cancelTaskZS","_cancelTaskDlgt","_cancelTaskCurrZone","_hasTaskZS","_hasTaskDlgt","_hasTaskDlgtOwner","_hasTaskCurrZone","zoneSpecHasTask","parentHasTask","targetZone","apply","returnTask","push","scheduleFn","value","isEmpty","counts","prev","next","change","options","_state","self","useG","call","args","_numberOfNestedTaskFrames","drainMicroTaskQueue","cancelScheduleRequest","toState","fromState1","fromState2","toString","handleId","Object","prototype","toJSON","symbolSetTimeout","symbolPromise","symbolThen","_microTaskQueue","_isDrainingMicrotaskQueue","nativeMicroTaskQueuePromise","nativeScheduleMicroTask","func","resolve","nativeThen","queue","onUnhandledError","microtaskDrainDone","symbol","currentZoneFrame","noop","showUncaughtError","patchEventTarget","patchOnProperties","patchMethod","bindArguments","patchThen","patchMacroTask","patchEventPrototype","isIEOrEdge","getGlobalObjects","ObjectDefineProperty","ObjectGetOwnPropertyDescriptor","ObjectCreate","ArraySlice","patchClass","wrapWithCurrentZone","filterProperties","attachOriginToPatched","_redefineProperty","patchCallbacks","window","api","e","rejection","console","message","stack","symbolThenPatched","Ctor","proto","prop","getOwnPropertyDescriptor","writable","configurable","originalThen","then","makeResolver","resolveFunc","isReject","val","Promise","reject","onResolve","onReject","defineProperty","ObjectGetPrototypeOf","getPrototypeOf","Array","slice","ADD_EVENT_LISTENER_STR","REMOVE_EVENT_LISTENER_STR","TRUE_STR","FALSE_STR","ZONE_SYMBOL_PREFIX","scheduleMacroTaskWithCurrentZone","zoneSymbol","isWindowExists","internalWindow","_global","REMOVE_ATTRIBUTE","isPropertyWritable","propertyDesc","set","isWebWorker","WorkerGlobalScope","isNode","process","isBrowser","isMix","zoneSymbolEventNames$1","wrapFn","event","eventNameSymbol","listener","result","errorEvent","filename","lineno","colno","preventDefault","patchProperty","obj","desc","prototypeDesc","enumerable","onPropPatchedSymbol","originalDescGet","originalDescSet","eventName","newValue","previousValue","removeEventListener","addEventListener","removeAttribute","onProperties","j","copySymbolProperties","src","dest","getOwnPropertySymbols","symbols","forEach","shouldCopySymbolProperties","setShouldCopySymbolProperties","flag","patchFn","delegateName","patchDelegate","funcName","metaCreator","setNative","cbIdx","meta","patchMicroTask","patched","original","originalFunctionToString","Function","ORIGINAL_DELEGATE_SYMBOL","PROMISE_SYMBOL","ERROR_SYMBOL","newFunctionToString","originalDelegate","nativePromise","nativeError","originalObjectToString","PROMISE_OBJECT_TO_STRING","passiveSupported","OPTIMIZED_ZONE_EVENT_TASK_DATA","zoneSymbolEventNames","globalSources","EVENT_NAME_SYMBOL_REGX","RegExp","IMMEDIATE_PROPAGATION_SYMBOL","prepareEventNames","eventNameToString","falseEventName","trueEventName","symbolCapture","apis","patchOptions","ADD_EVENT_LISTENER","add","REMOVE_EVENT_LISTENER","rm","LISTENERS_EVENT_LISTENER","listeners","REMOVE_ALL_LISTENERS_EVENT_LISTENER","rmAll","zoneSymbolAddEventListener","ADD_EVENT_LISTENER_SOURCE","PREPEND_EVENT_LISTENER","PREPEND_EVENT_LISTENER_SOURCE","isRemoved","handleEvent","once","globalCallback","context","isCapture","tasks","errors","copyTasks","globalZoneAwareCallback","globalZoneAwareCaptureCallback","patchEventTargetMethods","useGlobalCallback","validateHandler","vh","chkDup","returnTarget","rt","taskData","nativeAddEventListener","nativeRemoveEventListener","nativeListeners","nativeRemoveAllListeners","nativePrependEventListener","prepend","buildEventListenerOptions","passive","capture","customScheduleGlobal","isExisting","customCancelGlobal","symbolEventNames","symbolEventName","existingTasks","existingTask","splice","allRemoved","customScheduleNonGlobal","customSchedulePrepend","customCancelNonGlobal","compareTaskCallbackVsDelegate","typeOfDelegate","compare","diff","unpatchedEvents","passiveEvents","makeAddListener","nativeListener","addSource","customScheduleFn","customCancelFn","transferEventName","isHandleEvent","indexOf","constructorName","targetSource","unshift","onPropertySymbol","findEventTasks","keys","match","exec","evtName","symbolCaptureEventName","captureTasks","removeTasks","results","foundTasks","captureFalseTasks","captureTrueTasks","concat","EE_ADD_LISTENER","EE_PREPEND_LISTENER","EE_REMOVE_LISTENER","EE_REMOVE_ALL_LISTENER","EE_LISTENERS","EE_ON","EE_OFF","replace","patchEventEmitterMethods","events","require","EventEmitter","fs","TO_PATCH_MACROTASK_METHODS","filter","taskSymbol","patchTimer","setName","cancelName","nameSuffix","clearNative","tasksByHandleId","clearTask","delay","timer","handle","ref","unref","bind","id","clear","globalUseTimeoutFromTimer","timers","globalEqualTimersTimeout","setTimeout","originSetTimeout","detectTimeout","clearTimeout","setInterval","setImmediate","findProcessPromiseRejectionHandler","eventTasks","promise","crypto","methodNames","consoleMethods","m","originalMethod"],"sources":["C:/Users/feder/OneDrive/Desktop/federico_lecca/follyway/spikes/gsap-spike-angular-ssr/node_modules/zone.js/fesm2015/zone-node.js"],"sourcesContent":["'use strict';\n/**\n * @license Angular v<unknown>\n * (c) 2010-2022 Google LLC. https://angular.io/\n * License: MIT\n */\n((function (global) {\n    const performance = global['performance'];\n    function mark(name) {\n        performance && performance['mark'] && performance['mark'](name);\n    }\n    function performanceMeasure(name, label) {\n        performance && performance['measure'] && performance['measure'](name, label);\n    }\n    mark('Zone');\n    // Initialize before it's accessed below.\n    // __Zone_symbol_prefix global can be used to override the default zone\n    // symbol prefix with a custom one if needed.\n    const symbolPrefix = global['__Zone_symbol_prefix'] || '__zone_symbol__';\n    function __symbol__(name) {\n        return symbolPrefix + name;\n    }\n    const checkDuplicate = global[__symbol__('forceDuplicateZoneCheck')] === true;\n    if (global['Zone']) {\n        // if global['Zone'] already exists (maybe zone.js was already loaded or\n        // some other lib also registered a global object named Zone), we may need\n        // to throw an error, but sometimes user may not want this error.\n        // For example,\n        // we have two web pages, page1 includes zone.js, page2 doesn't.\n        // and the 1st time user load page1 and page2, everything work fine,\n        // but when user load page2 again, error occurs because global['Zone'] already exists.\n        // so we add a flag to let user choose whether to throw this error or not.\n        // By default, if existing Zone is from zone.js, we will not throw the error.\n        if (checkDuplicate || typeof global['Zone'].__symbol__ !== 'function') {\n            throw new Error('Zone already loaded.');\n        }\n        else {\n            return global['Zone'];\n        }\n    }\n    class Zone {\n        static assertZonePatched() {\n            if (global['Promise'] !== patches['ZoneAwarePromise']) {\n                throw new Error('Zone.js has detected that ZoneAwarePromise `(window|global).Promise` ' +\n                    'has been overwritten.\\n' +\n                    'Most likely cause is that a Promise polyfill has been loaded ' +\n                    'after Zone.js (Polyfilling Promise api is not necessary when zone.js is loaded. ' +\n                    'If you must load one, do so before loading zone.js.)');\n            }\n        }\n        static get root() {\n            let zone = Zone.current;\n            while (zone.parent) {\n                zone = zone.parent;\n            }\n            return zone;\n        }\n        static get current() {\n            return _currentZoneFrame.zone;\n        }\n        static get currentTask() {\n            return _currentTask;\n        }\n        // tslint:disable-next-line:require-internal-with-underscore\n        static __load_patch(name, fn, ignoreDuplicate = false) {\n            if (patches.hasOwnProperty(name)) {\n                // `checkDuplicate` option is defined from global variable\n                // so it works for all modules.\n                // `ignoreDuplicate` can work for the specified module\n                if (!ignoreDuplicate && checkDuplicate) {\n                    throw Error('Already loaded patch: ' + name);\n                }\n            }\n            else if (!global['__Zone_disable_' + name]) {\n                const perfName = 'Zone:' + name;\n                mark(perfName);\n                patches[name] = fn(global, Zone, _api);\n                performanceMeasure(perfName, perfName);\n            }\n        }\n        get parent() {\n            return this._parent;\n        }\n        get name() {\n            return this._name;\n        }\n        constructor(parent, zoneSpec) {\n            this._parent = parent;\n            this._name = zoneSpec ? zoneSpec.name || 'unnamed' : '<root>';\n            this._properties = zoneSpec && zoneSpec.properties || {};\n            this._zoneDelegate =\n                new _ZoneDelegate(this, this._parent && this._parent._zoneDelegate, zoneSpec);\n        }\n        get(key) {\n            const zone = this.getZoneWith(key);\n            if (zone)\n                return zone._properties[key];\n        }\n        getZoneWith(key) {\n            let current = this;\n            while (current) {\n                if (current._properties.hasOwnProperty(key)) {\n                    return current;\n                }\n                current = current._parent;\n            }\n            return null;\n        }\n        fork(zoneSpec) {\n            if (!zoneSpec)\n                throw new Error('ZoneSpec required!');\n            return this._zoneDelegate.fork(this, zoneSpec);\n        }\n        wrap(callback, source) {\n            if (typeof callback !== 'function') {\n                throw new Error('Expecting function got: ' + callback);\n            }\n            const _callback = this._zoneDelegate.intercept(this, callback, source);\n            const zone = this;\n            return function () {\n                return zone.runGuarded(_callback, this, arguments, source);\n            };\n        }\n        run(callback, applyThis, applyArgs, source) {\n            _currentZoneFrame = { parent: _currentZoneFrame, zone: this };\n            try {\n                return this._zoneDelegate.invoke(this, callback, applyThis, applyArgs, source);\n            }\n            finally {\n                _currentZoneFrame = _currentZoneFrame.parent;\n            }\n        }\n        runGuarded(callback, applyThis = null, applyArgs, source) {\n            _currentZoneFrame = { parent: _currentZoneFrame, zone: this };\n            try {\n                try {\n                    return this._zoneDelegate.invoke(this, callback, applyThis, applyArgs, source);\n                }\n                catch (error) {\n                    if (this._zoneDelegate.handleError(this, error)) {\n                        throw error;\n                    }\n                }\n            }\n            finally {\n                _currentZoneFrame = _currentZoneFrame.parent;\n            }\n        }\n        runTask(task, applyThis, applyArgs) {\n            if (task.zone != this) {\n                throw new Error('A task can only be run in the zone of creation! (Creation: ' +\n                    (task.zone || NO_ZONE).name + '; Execution: ' + this.name + ')');\n            }\n            // https://github.com/angular/zone.js/issues/778, sometimes eventTask\n            // will run in notScheduled(canceled) state, we should not try to\n            // run such kind of task but just return\n            if (task.state === notScheduled && (task.type === eventTask || task.type === macroTask)) {\n                return;\n            }\n            const reEntryGuard = task.state != running;\n            reEntryGuard && task._transitionTo(running, scheduled);\n            task.runCount++;\n            const previousTask = _currentTask;\n            _currentTask = task;\n            _currentZoneFrame = { parent: _currentZoneFrame, zone: this };\n            try {\n                if (task.type == macroTask && task.data && !task.data.isPeriodic) {\n                    task.cancelFn = undefined;\n                }\n                try {\n                    return this._zoneDelegate.invokeTask(this, task, applyThis, applyArgs);\n                }\n                catch (error) {\n                    if (this._zoneDelegate.handleError(this, error)) {\n                        throw error;\n                    }\n                }\n            }\n            finally {\n                // if the task's state is notScheduled or unknown, then it has already been cancelled\n                // we should not reset the state to scheduled\n                if (task.state !== notScheduled && task.state !== unknown) {\n                    if (task.type == eventTask || (task.data && task.data.isPeriodic)) {\n                        reEntryGuard && task._transitionTo(scheduled, running);\n                    }\n                    else {\n                        task.runCount = 0;\n                        this._updateTaskCount(task, -1);\n                        reEntryGuard &&\n                            task._transitionTo(notScheduled, running, notScheduled);\n                    }\n                }\n                _currentZoneFrame = _currentZoneFrame.parent;\n                _currentTask = previousTask;\n            }\n        }\n        scheduleTask(task) {\n            if (task.zone && task.zone !== this) {\n                // check if the task was rescheduled, the newZone\n                // should not be the children of the original zone\n                let newZone = this;\n                while (newZone) {\n                    if (newZone === task.zone) {\n                        throw Error(`can not reschedule task to ${this.name} which is descendants of the original zone ${task.zone.name}`);\n                    }\n                    newZone = newZone.parent;\n                }\n            }\n            task._transitionTo(scheduling, notScheduled);\n            const zoneDelegates = [];\n            task._zoneDelegates = zoneDelegates;\n            task._zone = this;\n            try {\n                task = this._zoneDelegate.scheduleTask(this, task);\n            }\n            catch (err) {\n                // should set task's state to unknown when scheduleTask throw error\n                // because the err may from reschedule, so the fromState maybe notScheduled\n                task._transitionTo(unknown, scheduling, notScheduled);\n                // TODO: @JiaLiPassion, should we check the result from handleError?\n                this._zoneDelegate.handleError(this, err);\n                throw err;\n            }\n            if (task._zoneDelegates === zoneDelegates) {\n                // we have to check because internally the delegate can reschedule the task.\n                this._updateTaskCount(task, 1);\n            }\n            if (task.state == scheduling) {\n                task._transitionTo(scheduled, scheduling);\n            }\n            return task;\n        }\n        scheduleMicroTask(source, callback, data, customSchedule) {\n            return this.scheduleTask(new ZoneTask(microTask, source, callback, data, customSchedule, undefined));\n        }\n        scheduleMacroTask(source, callback, data, customSchedule, customCancel) {\n            return this.scheduleTask(new ZoneTask(macroTask, source, callback, data, customSchedule, customCancel));\n        }\n        scheduleEventTask(source, callback, data, customSchedule, customCancel) {\n            return this.scheduleTask(new ZoneTask(eventTask, source, callback, data, customSchedule, customCancel));\n        }\n        cancelTask(task) {\n            if (task.zone != this)\n                throw new Error('A task can only be cancelled in the zone of creation! (Creation: ' +\n                    (task.zone || NO_ZONE).name + '; Execution: ' + this.name + ')');\n            if (task.state !== scheduled && task.state !== running) {\n                return;\n            }\n            task._transitionTo(canceling, scheduled, running);\n            try {\n                this._zoneDelegate.cancelTask(this, task);\n            }\n            catch (err) {\n                // if error occurs when cancelTask, transit the state to unknown\n                task._transitionTo(unknown, canceling);\n                this._zoneDelegate.handleError(this, err);\n                throw err;\n            }\n            this._updateTaskCount(task, -1);\n            task._transitionTo(notScheduled, canceling);\n            task.runCount = 0;\n            return task;\n        }\n        _updateTaskCount(task, count) {\n            const zoneDelegates = task._zoneDelegates;\n            if (count == -1) {\n                task._zoneDelegates = null;\n            }\n            for (let i = 0; i < zoneDelegates.length; i++) {\n                zoneDelegates[i]._updateTaskCount(task.type, count);\n            }\n        }\n    }\n    // tslint:disable-next-line:require-internal-with-underscore\n    Zone.__symbol__ = __symbol__;\n    const DELEGATE_ZS = {\n        name: '',\n        onHasTask: (delegate, _, target, hasTaskState) => delegate.hasTask(target, hasTaskState),\n        onScheduleTask: (delegate, _, target, task) => delegate.scheduleTask(target, task),\n        onInvokeTask: (delegate, _, target, task, applyThis, applyArgs) => delegate.invokeTask(target, task, applyThis, applyArgs),\n        onCancelTask: (delegate, _, target, task) => delegate.cancelTask(target, task)\n    };\n    class _ZoneDelegate {\n        constructor(zone, parentDelegate, zoneSpec) {\n            this._taskCounts = { 'microTask': 0, 'macroTask': 0, 'eventTask': 0 };\n            this.zone = zone;\n            this._parentDelegate = parentDelegate;\n            this._forkZS = zoneSpec && (zoneSpec && zoneSpec.onFork ? zoneSpec : parentDelegate._forkZS);\n            this._forkDlgt = zoneSpec && (zoneSpec.onFork ? parentDelegate : parentDelegate._forkDlgt);\n            this._forkCurrZone =\n                zoneSpec && (zoneSpec.onFork ? this.zone : parentDelegate._forkCurrZone);\n            this._interceptZS =\n                zoneSpec && (zoneSpec.onIntercept ? zoneSpec : parentDelegate._interceptZS);\n            this._interceptDlgt =\n                zoneSpec && (zoneSpec.onIntercept ? parentDelegate : parentDelegate._interceptDlgt);\n            this._interceptCurrZone =\n                zoneSpec && (zoneSpec.onIntercept ? this.zone : parentDelegate._interceptCurrZone);\n            this._invokeZS = zoneSpec && (zoneSpec.onInvoke ? zoneSpec : parentDelegate._invokeZS);\n            this._invokeDlgt =\n                zoneSpec && (zoneSpec.onInvoke ? parentDelegate : parentDelegate._invokeDlgt);\n            this._invokeCurrZone =\n                zoneSpec && (zoneSpec.onInvoke ? this.zone : parentDelegate._invokeCurrZone);\n            this._handleErrorZS =\n                zoneSpec && (zoneSpec.onHandleError ? zoneSpec : parentDelegate._handleErrorZS);\n            this._handleErrorDlgt =\n                zoneSpec && (zoneSpec.onHandleError ? parentDelegate : parentDelegate._handleErrorDlgt);\n            this._handleErrorCurrZone =\n                zoneSpec && (zoneSpec.onHandleError ? this.zone : parentDelegate._handleErrorCurrZone);\n            this._scheduleTaskZS =\n                zoneSpec && (zoneSpec.onScheduleTask ? zoneSpec : parentDelegate._scheduleTaskZS);\n            this._scheduleTaskDlgt = zoneSpec &&\n                (zoneSpec.onScheduleTask ? parentDelegate : parentDelegate._scheduleTaskDlgt);\n            this._scheduleTaskCurrZone =\n                zoneSpec && (zoneSpec.onScheduleTask ? this.zone : parentDelegate._scheduleTaskCurrZone);\n            this._invokeTaskZS =\n                zoneSpec && (zoneSpec.onInvokeTask ? zoneSpec : parentDelegate._invokeTaskZS);\n            this._invokeTaskDlgt =\n                zoneSpec && (zoneSpec.onInvokeTask ? parentDelegate : parentDelegate._invokeTaskDlgt);\n            this._invokeTaskCurrZone =\n                zoneSpec && (zoneSpec.onInvokeTask ? this.zone : parentDelegate._invokeTaskCurrZone);\n            this._cancelTaskZS =\n                zoneSpec && (zoneSpec.onCancelTask ? zoneSpec : parentDelegate._cancelTaskZS);\n            this._cancelTaskDlgt =\n                zoneSpec && (zoneSpec.onCancelTask ? parentDelegate : parentDelegate._cancelTaskDlgt);\n            this._cancelTaskCurrZone =\n                zoneSpec && (zoneSpec.onCancelTask ? this.zone : parentDelegate._cancelTaskCurrZone);\n            this._hasTaskZS = null;\n            this._hasTaskDlgt = null;\n            this._hasTaskDlgtOwner = null;\n            this._hasTaskCurrZone = null;\n            const zoneSpecHasTask = zoneSpec && zoneSpec.onHasTask;\n            const parentHasTask = parentDelegate && parentDelegate._hasTaskZS;\n            if (zoneSpecHasTask || parentHasTask) {\n                // If we need to report hasTask, than this ZS needs to do ref counting on tasks. In such\n                // a case all task related interceptors must go through this ZD. We can't short circuit it.\n                this._hasTaskZS = zoneSpecHasTask ? zoneSpec : DELEGATE_ZS;\n                this._hasTaskDlgt = parentDelegate;\n                this._hasTaskDlgtOwner = this;\n                this._hasTaskCurrZone = zone;\n                if (!zoneSpec.onScheduleTask) {\n                    this._scheduleTaskZS = DELEGATE_ZS;\n                    this._scheduleTaskDlgt = parentDelegate;\n                    this._scheduleTaskCurrZone = this.zone;\n                }\n                if (!zoneSpec.onInvokeTask) {\n                    this._invokeTaskZS = DELEGATE_ZS;\n                    this._invokeTaskDlgt = parentDelegate;\n                    this._invokeTaskCurrZone = this.zone;\n                }\n                if (!zoneSpec.onCancelTask) {\n                    this._cancelTaskZS = DELEGATE_ZS;\n                    this._cancelTaskDlgt = parentDelegate;\n                    this._cancelTaskCurrZone = this.zone;\n                }\n            }\n        }\n        fork(targetZone, zoneSpec) {\n            return this._forkZS ? this._forkZS.onFork(this._forkDlgt, this.zone, targetZone, zoneSpec) :\n                new Zone(targetZone, zoneSpec);\n        }\n        intercept(targetZone, callback, source) {\n            return this._interceptZS ?\n                this._interceptZS.onIntercept(this._interceptDlgt, this._interceptCurrZone, targetZone, callback, source) :\n                callback;\n        }\n        invoke(targetZone, callback, applyThis, applyArgs, source) {\n            return this._invokeZS ? this._invokeZS.onInvoke(this._invokeDlgt, this._invokeCurrZone, targetZone, callback, applyThis, applyArgs, source) :\n                callback.apply(applyThis, applyArgs);\n        }\n        handleError(targetZone, error) {\n            return this._handleErrorZS ?\n                this._handleErrorZS.onHandleError(this._handleErrorDlgt, this._handleErrorCurrZone, targetZone, error) :\n                true;\n        }\n        scheduleTask(targetZone, task) {\n            let returnTask = task;\n            if (this._scheduleTaskZS) {\n                if (this._hasTaskZS) {\n                    returnTask._zoneDelegates.push(this._hasTaskDlgtOwner);\n                }\n                // clang-format off\n                returnTask = this._scheduleTaskZS.onScheduleTask(this._scheduleTaskDlgt, this._scheduleTaskCurrZone, targetZone, task);\n                // clang-format on\n                if (!returnTask)\n                    returnTask = task;\n            }\n            else {\n                if (task.scheduleFn) {\n                    task.scheduleFn(task);\n                }\n                else if (task.type == microTask) {\n                    scheduleMicroTask(task);\n                }\n                else {\n                    throw new Error('Task is missing scheduleFn.');\n                }\n            }\n            return returnTask;\n        }\n        invokeTask(targetZone, task, applyThis, applyArgs) {\n            return this._invokeTaskZS ? this._invokeTaskZS.onInvokeTask(this._invokeTaskDlgt, this._invokeTaskCurrZone, targetZone, task, applyThis, applyArgs) :\n                task.callback.apply(applyThis, applyArgs);\n        }\n        cancelTask(targetZone, task) {\n            let value;\n            if (this._cancelTaskZS) {\n                value = this._cancelTaskZS.onCancelTask(this._cancelTaskDlgt, this._cancelTaskCurrZone, targetZone, task);\n            }\n            else {\n                if (!task.cancelFn) {\n                    throw Error('Task is not cancelable');\n                }\n                value = task.cancelFn(task);\n            }\n            return value;\n        }\n        hasTask(targetZone, isEmpty) {\n            // hasTask should not throw error so other ZoneDelegate\n            // can still trigger hasTask callback\n            try {\n                this._hasTaskZS &&\n                    this._hasTaskZS.onHasTask(this._hasTaskDlgt, this._hasTaskCurrZone, targetZone, isEmpty);\n            }\n            catch (err) {\n                this.handleError(targetZone, err);\n            }\n        }\n        // tslint:disable-next-line:require-internal-with-underscore\n        _updateTaskCount(type, count) {\n            const counts = this._taskCounts;\n            const prev = counts[type];\n            const next = counts[type] = prev + count;\n            if (next < 0) {\n                throw new Error('More tasks executed then were scheduled.');\n            }\n            if (prev == 0 || next == 0) {\n                const isEmpty = {\n                    microTask: counts['microTask'] > 0,\n                    macroTask: counts['macroTask'] > 0,\n                    eventTask: counts['eventTask'] > 0,\n                    change: type\n                };\n                this.hasTask(this.zone, isEmpty);\n            }\n        }\n    }\n    class ZoneTask {\n        constructor(type, source, callback, options, scheduleFn, cancelFn) {\n            // tslint:disable-next-line:require-internal-with-underscore\n            this._zone = null;\n            this.runCount = 0;\n            // tslint:disable-next-line:require-internal-with-underscore\n            this._zoneDelegates = null;\n            // tslint:disable-next-line:require-internal-with-underscore\n            this._state = 'notScheduled';\n            this.type = type;\n            this.source = source;\n            this.data = options;\n            this.scheduleFn = scheduleFn;\n            this.cancelFn = cancelFn;\n            if (!callback) {\n                throw new Error('callback is not defined');\n            }\n            this.callback = callback;\n            const self = this;\n            // TODO: @JiaLiPassion options should have interface\n            if (type === eventTask && options && options.useG) {\n                this.invoke = ZoneTask.invokeTask;\n            }\n            else {\n                this.invoke = function () {\n                    return ZoneTask.invokeTask.call(global, self, this, arguments);\n                };\n            }\n        }\n        static invokeTask(task, target, args) {\n            if (!task) {\n                task = this;\n            }\n            _numberOfNestedTaskFrames++;\n            try {\n                task.runCount++;\n                return task.zone.runTask(task, target, args);\n            }\n            finally {\n                if (_numberOfNestedTaskFrames == 1) {\n                    drainMicroTaskQueue();\n                }\n                _numberOfNestedTaskFrames--;\n            }\n        }\n        get zone() {\n            return this._zone;\n        }\n        get state() {\n            return this._state;\n        }\n        cancelScheduleRequest() {\n            this._transitionTo(notScheduled, scheduling);\n        }\n        // tslint:disable-next-line:require-internal-with-underscore\n        _transitionTo(toState, fromState1, fromState2) {\n            if (this._state === fromState1 || this._state === fromState2) {\n                this._state = toState;\n                if (toState == notScheduled) {\n                    this._zoneDelegates = null;\n                }\n            }\n            else {\n                throw new Error(`${this.type} '${this.source}': can not transition to '${toState}', expecting state '${fromState1}'${fromState2 ? ' or \\'' + fromState2 + '\\'' : ''}, was '${this._state}'.`);\n            }\n        }\n        toString() {\n            if (this.data && typeof this.data.handleId !== 'undefined') {\n                return this.data.handleId.toString();\n            }\n            else {\n                return Object.prototype.toString.call(this);\n            }\n        }\n        // add toJSON method to prevent cyclic error when\n        // call JSON.stringify(zoneTask)\n        toJSON() {\n            return {\n                type: this.type,\n                state: this.state,\n                source: this.source,\n                zone: this.zone.name,\n                runCount: this.runCount\n            };\n        }\n    }\n    //////////////////////////////////////////////////////\n    //////////////////////////////////////////////////////\n    ///  MICROTASK QUEUE\n    //////////////////////////////////////////////////////\n    //////////////////////////////////////////////////////\n    const symbolSetTimeout = __symbol__('setTimeout');\n    const symbolPromise = __symbol__('Promise');\n    const symbolThen = __symbol__('then');\n    let _microTaskQueue = [];\n    let _isDrainingMicrotaskQueue = false;\n    let nativeMicroTaskQueuePromise;\n    function nativeScheduleMicroTask(func) {\n        if (!nativeMicroTaskQueuePromise) {\n            if (global[symbolPromise]) {\n                nativeMicroTaskQueuePromise = global[symbolPromise].resolve(0);\n            }\n        }\n        if (nativeMicroTaskQueuePromise) {\n            let nativeThen = nativeMicroTaskQueuePromise[symbolThen];\n            if (!nativeThen) {\n                // native Promise is not patchable, we need to use `then` directly\n                // issue 1078\n                nativeThen = nativeMicroTaskQueuePromise['then'];\n            }\n            nativeThen.call(nativeMicroTaskQueuePromise, func);\n        }\n        else {\n            global[symbolSetTimeout](func, 0);\n        }\n    }\n    function scheduleMicroTask(task) {\n        // if we are not running in any task, and there has not been anything scheduled\n        // we must bootstrap the initial task creation by manually scheduling the drain\n        if (_numberOfNestedTaskFrames === 0 && _microTaskQueue.length === 0) {\n            // We are not running in Task, so we need to kickstart the microtask queue.\n            nativeScheduleMicroTask(drainMicroTaskQueue);\n        }\n        task && _microTaskQueue.push(task);\n    }\n    function drainMicroTaskQueue() {\n        if (!_isDrainingMicrotaskQueue) {\n            _isDrainingMicrotaskQueue = true;\n            while (_microTaskQueue.length) {\n                const queue = _microTaskQueue;\n                _microTaskQueue = [];\n                for (let i = 0; i < queue.length; i++) {\n                    const task = queue[i];\n                    try {\n                        task.zone.runTask(task, null, null);\n                    }\n                    catch (error) {\n                        _api.onUnhandledError(error);\n                    }\n                }\n            }\n            _api.microtaskDrainDone();\n            _isDrainingMicrotaskQueue = false;\n        }\n    }\n    //////////////////////////////////////////////////////\n    //////////////////////////////////////////////////////\n    ///  BOOTSTRAP\n    //////////////////////////////////////////////////////\n    //////////////////////////////////////////////////////\n    const NO_ZONE = { name: 'NO ZONE' };\n    const notScheduled = 'notScheduled', scheduling = 'scheduling', scheduled = 'scheduled', running = 'running', canceling = 'canceling', unknown = 'unknown';\n    const microTask = 'microTask', macroTask = 'macroTask', eventTask = 'eventTask';\n    const patches = {};\n    const _api = {\n        symbol: __symbol__,\n        currentZoneFrame: () => _currentZoneFrame,\n        onUnhandledError: noop,\n        microtaskDrainDone: noop,\n        scheduleMicroTask: scheduleMicroTask,\n        showUncaughtError: () => !Zone[__symbol__('ignoreConsoleErrorUncaughtError')],\n        patchEventTarget: () => [],\n        patchOnProperties: noop,\n        patchMethod: () => noop,\n        bindArguments: () => [],\n        patchThen: () => noop,\n        patchMacroTask: () => noop,\n        patchEventPrototype: () => noop,\n        isIEOrEdge: () => false,\n        getGlobalObjects: () => undefined,\n        ObjectDefineProperty: () => noop,\n        ObjectGetOwnPropertyDescriptor: () => undefined,\n        ObjectCreate: () => undefined,\n        ArraySlice: () => [],\n        patchClass: () => noop,\n        wrapWithCurrentZone: () => noop,\n        filterProperties: () => [],\n        attachOriginToPatched: () => noop,\n        _redefineProperty: () => noop,\n        patchCallbacks: () => noop,\n        nativeScheduleMicroTask: nativeScheduleMicroTask\n    };\n    let _currentZoneFrame = { parent: null, zone: new Zone(null, null) };\n    let _currentTask = null;\n    let _numberOfNestedTaskFrames = 0;\n    function noop() { }\n    performanceMeasure('Zone', 'Zone');\n    return global['Zone'] = Zone;\n}))(typeof window !== 'undefined' && window || typeof self !== 'undefined' && self || global);\n\n/**\n * A different implementation for monkey patching Promise.\n * Currently Zone.js patches Promise itself with ZoneAwarePromise and also Promise.prototype.then\n * The reason is:\n *\n * 1. Promise.prototype.then should trigger ZoneSpec.scheduleTask and acts as a microTask\n * 2. Promise should be able to controlled by fakeAsync(), so Promise.prototype.then can work as\n * sync operation in fakeAsync()\n * 3. Promise unhandledRejection can be handled by ZoneSpec.onHandleError hook\n *\n * And this implementation also has it's disadvantage.\n *\n * 1. We need to implement a full Promise spec by ourselves.\n * 2. We need to implement the new APIs for Promise such as (all, allSettled, any...) when the new\n * APIs are available.\n * 3. Promise behavior is different with the native one, such as the timing of then callback.\n * 4. Can not handle the some vm operation requires native Promise such as async/await or\n * SafePromise.\n *\n * And this new implementation try to address most of these disadvantages.\n * 1. We don't monkey patch Promise itself any longer.\n * 2. We only monkey patches Promise.prototype.then and schedule microTask from there.\n * 3. The Promise APIs are all using native ones.\n * 4. SafePromise issues are gone, and the timing will be the same with the native one.\n *\n * Also this new implementation introduces breaking changes.\n *\n * 1. Promise can not be easily handled by fakeAsync(), and since we will deprecate fakeAsync() in\n * the future, this is the first step.\n * 2. Promise unhandled rejection happened inside new Promise(callback) will not be handled by\n * ZoneSpec.onHandleError(thenCallback error will not be be impacted).\n *\n * So now we only introduces this change to `zone-node` bundle, since the breaking change will be\n * minor for NodeJS environment,\n * @TODO: JiaLiPassion, we will introduce this change to browser later.\n */\nZone.__load_patch('ZoneAwarePromise', (global, Zone, api) => {\n    const __symbol__ = api.symbol;\n    const symbolThen = __symbol__('then');\n    api.onUnhandledError = (e) => {\n        if (api.showUncaughtError()) {\n            const rejection = e && e.rejection;\n            if (rejection) {\n                console.error('Unhandled Promise rejection:', rejection instanceof Error ? rejection?.message : rejection, '; Zone:', e.zone.name, '; Task:', e.task && e.task.source, '; Value:', rejection, rejection instanceof Error ? rejection.stack : undefined);\n            }\n            else {\n                console.error(e);\n            }\n        }\n    };\n    api.microtaskDrainDone = () => { };\n    const symbolThenPatched = __symbol__('thenPatched');\n    function patchThen(Ctor) {\n        const proto = Ctor.prototype;\n        if (Ctor[symbolThenPatched] === true) {\n            return;\n        }\n        const prop = Object.getOwnPropertyDescriptor(proto, 'then');\n        if (prop && (prop.writable === false || !prop.configurable)) {\n            // check Ctor.prototype.then propertyDescriptor is writable or not\n            // in meteor env, writable is false, we should ignore such case\n            return;\n        }\n        const originalThen = proto.then;\n        // Keep a reference to the original method.\n        proto[symbolThen] = originalThen;\n        const makeResolver = function (resolveFunc, zone, source, isReject) {\n            if (!resolveFunc) {\n                return resolveFunc;\n            }\n            return (val) => {\n                const task = zone.scheduleMicroTask(source, () => {\n                    return typeof resolveFunc === 'function' ? resolveFunc(val) :\n                        (isReject ? Promise.reject(val) : val);\n                }, undefined, () => { });\n                return zone.runGuarded(() => {\n                    return task.invoke();\n                }, undefined, []);\n            };\n        };\n        Ctor.prototype.then = function (onResolve, onReject) {\n            const zone = Zone.current;\n            return originalThen.call(this, makeResolver(onResolve, zone, 'Promise.prototype.then', false), makeResolver(onReject, zone, 'Promise.prototype.reject', true));\n        };\n        Ctor[symbolThenPatched] = true;\n    }\n    api.patchThen = patchThen;\n    if (Promise) {\n        patchThen(Promise);\n    }\n    global[api.symbol('Promise')] = Promise;\n    return Promise;\n});\n\n/**\n * Suppress closure compiler errors about unknown 'Zone' variable\n * @fileoverview\n * @suppress {undefinedVars,globalThis,missingRequire}\n */\n/// <reference types=\"node\"/>\n// issue #989, to reduce bundle size, use short name\n/** Object.getOwnPropertyDescriptor */\nconst ObjectGetOwnPropertyDescriptor = Object.getOwnPropertyDescriptor;\n/** Object.defineProperty */\nconst ObjectDefineProperty = Object.defineProperty;\n/** Object.getPrototypeOf */\nconst ObjectGetPrototypeOf = Object.getPrototypeOf;\n/** Array.prototype.slice */\nconst ArraySlice = Array.prototype.slice;\n/** addEventListener string const */\nconst ADD_EVENT_LISTENER_STR = 'addEventListener';\n/** removeEventListener string const */\nconst REMOVE_EVENT_LISTENER_STR = 'removeEventListener';\n/** zoneSymbol addEventListener */\nZone.__symbol__(ADD_EVENT_LISTENER_STR);\n/** zoneSymbol removeEventListener */\nZone.__symbol__(REMOVE_EVENT_LISTENER_STR);\n/** true string const */\nconst TRUE_STR = 'true';\n/** false string const */\nconst FALSE_STR = 'false';\n/** Zone symbol prefix string const. */\nconst ZONE_SYMBOL_PREFIX = Zone.__symbol__('');\nfunction wrapWithCurrentZone(callback, source) {\n    return Zone.current.wrap(callback, source);\n}\nfunction scheduleMacroTaskWithCurrentZone(source, callback, data, customSchedule, customCancel) {\n    return Zone.current.scheduleMacroTask(source, callback, data, customSchedule, customCancel);\n}\nconst zoneSymbol = Zone.__symbol__;\nconst isWindowExists = typeof window !== 'undefined';\nconst internalWindow = isWindowExists ? window : undefined;\nconst _global = isWindowExists && internalWindow || typeof self === 'object' && self || global;\nconst REMOVE_ATTRIBUTE = 'removeAttribute';\nfunction bindArguments(args, source) {\n    for (let i = args.length - 1; i >= 0; i--) {\n        if (typeof args[i] === 'function') {\n            args[i] = wrapWithCurrentZone(args[i], source + '_' + i);\n        }\n    }\n    return args;\n}\nfunction isPropertyWritable(propertyDesc) {\n    if (!propertyDesc) {\n        return true;\n    }\n    if (propertyDesc.writable === false) {\n        return false;\n    }\n    return !(typeof propertyDesc.get === 'function' && typeof propertyDesc.set === 'undefined');\n}\nconst isWebWorker = (typeof WorkerGlobalScope !== 'undefined' && self instanceof WorkerGlobalScope);\n// Make sure to access `process` through `_global` so that WebPack does not accidentally browserify\n// this code.\nconst isNode = (!('nw' in _global) && typeof _global.process !== 'undefined' &&\n    {}.toString.call(_global.process) === '[object process]');\nconst isBrowser = !isNode && !isWebWorker && !!(isWindowExists && internalWindow['HTMLElement']);\n// we are in electron of nw, so we are both browser and nodejs\n// Make sure to access `process` through `_global` so that WebPack does not accidentally browserify\n// this code.\nconst isMix = typeof _global.process !== 'undefined' &&\n    {}.toString.call(_global.process) === '[object process]' && !isWebWorker &&\n    !!(isWindowExists && internalWindow['HTMLElement']);\nconst zoneSymbolEventNames$1 = {};\nconst wrapFn = function (event) {\n    // https://github.com/angular/zone.js/issues/911, in IE, sometimes\n    // event will be undefined, so we need to use window.event\n    event = event || _global.event;\n    if (!event) {\n        return;\n    }\n    let eventNameSymbol = zoneSymbolEventNames$1[event.type];\n    if (!eventNameSymbol) {\n        eventNameSymbol = zoneSymbolEventNames$1[event.type] = zoneSymbol('ON_PROPERTY' + event.type);\n    }\n    const target = this || event.target || _global;\n    const listener = target[eventNameSymbol];\n    let result;\n    if (isBrowser && target === internalWindow && event.type === 'error') {\n        // window.onerror have different signature\n        // https://developer.mozilla.org/en-US/docs/Web/API/GlobalEventHandlers/onerror#window.onerror\n        // and onerror callback will prevent default when callback return true\n        const errorEvent = event;\n        result = listener &&\n            listener.call(this, errorEvent.message, errorEvent.filename, errorEvent.lineno, errorEvent.colno, errorEvent.error);\n        if (result === true) {\n            event.preventDefault();\n        }\n    }\n    else {\n        result = listener && listener.apply(this, arguments);\n        if (result != undefined && !result) {\n            event.preventDefault();\n        }\n    }\n    return result;\n};\nfunction patchProperty(obj, prop, prototype) {\n    let desc = ObjectGetOwnPropertyDescriptor(obj, prop);\n    if (!desc && prototype) {\n        // when patch window object, use prototype to check prop exist or not\n        const prototypeDesc = ObjectGetOwnPropertyDescriptor(prototype, prop);\n        if (prototypeDesc) {\n            desc = { enumerable: true, configurable: true };\n        }\n    }\n    // if the descriptor not exists or is not configurable\n    // just return\n    if (!desc || !desc.configurable) {\n        return;\n    }\n    const onPropPatchedSymbol = zoneSymbol('on' + prop + 'patched');\n    if (obj.hasOwnProperty(onPropPatchedSymbol) && obj[onPropPatchedSymbol]) {\n        return;\n    }\n    // A property descriptor cannot have getter/setter and be writable\n    // deleting the writable and value properties avoids this error:\n    //\n    // TypeError: property descriptors must not specify a value or be writable when a\n    // getter or setter has been specified\n    delete desc.writable;\n    delete desc.value;\n    const originalDescGet = desc.get;\n    const originalDescSet = desc.set;\n    // slice(2) cuz 'onclick' -> 'click', etc\n    const eventName = prop.slice(2);\n    let eventNameSymbol = zoneSymbolEventNames$1[eventName];\n    if (!eventNameSymbol) {\n        eventNameSymbol = zoneSymbolEventNames$1[eventName] = zoneSymbol('ON_PROPERTY' + eventName);\n    }\n    desc.set = function (newValue) {\n        // in some of windows's onproperty callback, this is undefined\n        // so we need to check it\n        let target = this;\n        if (!target && obj === _global) {\n            target = _global;\n        }\n        if (!target) {\n            return;\n        }\n        const previousValue = target[eventNameSymbol];\n        if (typeof previousValue === 'function') {\n            target.removeEventListener(eventName, wrapFn);\n        }\n        // issue #978, when onload handler was added before loading zone.js\n        // we should remove it with originalDescSet\n        originalDescSet && originalDescSet.call(target, null);\n        target[eventNameSymbol] = newValue;\n        if (typeof newValue === 'function') {\n            target.addEventListener(eventName, wrapFn, false);\n        }\n    };\n    // The getter would return undefined for unassigned properties but the default value of an\n    // unassigned property is null\n    desc.get = function () {\n        // in some of windows's onproperty callback, this is undefined\n        // so we need to check it\n        let target = this;\n        if (!target && obj === _global) {\n            target = _global;\n        }\n        if (!target) {\n            return null;\n        }\n        const listener = target[eventNameSymbol];\n        if (listener) {\n            return listener;\n        }\n        else if (originalDescGet) {\n            // result will be null when use inline event attribute,\n            // such as <button onclick=\"func();\">OK</button>\n            // because the onclick function is internal raw uncompiled handler\n            // the onclick will be evaluated when first time event was triggered or\n            // the property is accessed, https://github.com/angular/zone.js/issues/525\n            // so we should use original native get to retrieve the handler\n            let value = originalDescGet.call(this);\n            if (value) {\n                desc.set.call(this, value);\n                if (typeof target[REMOVE_ATTRIBUTE] === 'function') {\n                    target.removeAttribute(prop);\n                }\n                return value;\n            }\n        }\n        return null;\n    };\n    ObjectDefineProperty(obj, prop, desc);\n    obj[onPropPatchedSymbol] = true;\n}\nfunction patchOnProperties(obj, properties, prototype) {\n    if (properties) {\n        for (let i = 0; i < properties.length; i++) {\n            patchProperty(obj, 'on' + properties[i], prototype);\n        }\n    }\n    else {\n        const onProperties = [];\n        for (const prop in obj) {\n            if (prop.slice(0, 2) == 'on') {\n                onProperties.push(prop);\n            }\n        }\n        for (let j = 0; j < onProperties.length; j++) {\n            patchProperty(obj, onProperties[j], prototype);\n        }\n    }\n}\nzoneSymbol('originalInstance');\nfunction copySymbolProperties(src, dest) {\n    if (typeof Object.getOwnPropertySymbols !== 'function') {\n        return;\n    }\n    const symbols = Object.getOwnPropertySymbols(src);\n    symbols.forEach((symbol) => {\n        const desc = Object.getOwnPropertyDescriptor(src, symbol);\n        Object.defineProperty(dest, symbol, {\n            get: function () {\n                return src[symbol];\n            },\n            set: function (value) {\n                if (desc && (!desc.writable || typeof desc.set !== 'function')) {\n                    // if src[symbol] is not writable or not have a setter, just return\n                    return;\n                }\n                src[symbol] = value;\n            },\n            enumerable: desc ? desc.enumerable : true,\n            configurable: desc ? desc.configurable : true\n        });\n    });\n}\nlet shouldCopySymbolProperties = false;\nfunction setShouldCopySymbolProperties(flag) {\n    shouldCopySymbolProperties = flag;\n}\nfunction patchMethod(target, name, patchFn) {\n    let proto = target;\n    while (proto && !proto.hasOwnProperty(name)) {\n        proto = ObjectGetPrototypeOf(proto);\n    }\n    if (!proto && target[name]) {\n        // somehow we did not find it, but we can see it. This happens on IE for Window properties.\n        proto = target;\n    }\n    const delegateName = zoneSymbol(name);\n    let delegate = null;\n    if (proto && (!(delegate = proto[delegateName]) || !proto.hasOwnProperty(delegateName))) {\n        delegate = proto[delegateName] = proto[name];\n        // check whether proto[name] is writable\n        // some property is readonly in safari, such as HtmlCanvasElement.prototype.toBlob\n        const desc = proto && ObjectGetOwnPropertyDescriptor(proto, name);\n        if (isPropertyWritable(desc)) {\n            const patchDelegate = patchFn(delegate, delegateName, name);\n            proto[name] = function () {\n                return patchDelegate(this, arguments);\n            };\n            attachOriginToPatched(proto[name], delegate);\n            if (shouldCopySymbolProperties) {\n                copySymbolProperties(delegate, proto[name]);\n            }\n        }\n    }\n    return delegate;\n}\n// TODO: @JiaLiPassion, support cancel task later if necessary\nfunction patchMacroTask(obj, funcName, metaCreator) {\n    let setNative = null;\n    function scheduleTask(task) {\n        const data = task.data;\n        data.args[data.cbIdx] = function () {\n            task.invoke.apply(this, arguments);\n        };\n        setNative.apply(data.target, data.args);\n        return task;\n    }\n    setNative = patchMethod(obj, funcName, (delegate) => function (self, args) {\n        const meta = metaCreator(self, args);\n        if (meta.cbIdx >= 0 && typeof args[meta.cbIdx] === 'function') {\n            return scheduleMacroTaskWithCurrentZone(meta.name, args[meta.cbIdx], meta, scheduleTask);\n        }\n        else {\n            // cause an error by calling it directly.\n            return delegate.apply(self, args);\n        }\n    });\n}\nfunction patchMicroTask(obj, funcName, metaCreator) {\n    let setNative = null;\n    function scheduleTask(task) {\n        const data = task.data;\n        data.args[data.cbIdx] = function () {\n            task.invoke.apply(this, arguments);\n        };\n        setNative.apply(data.target, data.args);\n        return task;\n    }\n    setNative = patchMethod(obj, funcName, (delegate) => function (self, args) {\n        const meta = metaCreator(self, args);\n        if (meta.cbIdx >= 0 && typeof args[meta.cbIdx] === 'function') {\n            return Zone.current.scheduleMicroTask(meta.name, args[meta.cbIdx], meta, scheduleTask);\n        }\n        else {\n            // cause an error by calling it directly.\n            return delegate.apply(self, args);\n        }\n    });\n}\nfunction attachOriginToPatched(patched, original) {\n    patched[zoneSymbol('OriginalDelegate')] = original;\n}\n\n// override Function.prototype.toString to make zone.js patched function\n// look like native function\nZone.__load_patch('toString', (global) => {\n    // patch Func.prototype.toString to let them look like native\n    const originalFunctionToString = Function.prototype.toString;\n    const ORIGINAL_DELEGATE_SYMBOL = zoneSymbol('OriginalDelegate');\n    const PROMISE_SYMBOL = zoneSymbol('Promise');\n    const ERROR_SYMBOL = zoneSymbol('Error');\n    const newFunctionToString = function toString() {\n        if (typeof this === 'function') {\n            const originalDelegate = this[ORIGINAL_DELEGATE_SYMBOL];\n            if (originalDelegate) {\n                if (typeof originalDelegate === 'function') {\n                    return originalFunctionToString.call(originalDelegate);\n                }\n                else {\n                    return Object.prototype.toString.call(originalDelegate);\n                }\n            }\n            if (this === Promise) {\n                const nativePromise = global[PROMISE_SYMBOL];\n                if (nativePromise) {\n                    return originalFunctionToString.call(nativePromise);\n                }\n            }\n            if (this === Error) {\n                const nativeError = global[ERROR_SYMBOL];\n                if (nativeError) {\n                    return originalFunctionToString.call(nativeError);\n                }\n            }\n        }\n        return originalFunctionToString.call(this);\n    };\n    newFunctionToString[ORIGINAL_DELEGATE_SYMBOL] = originalFunctionToString;\n    Function.prototype.toString = newFunctionToString;\n    // patch Object.prototype.toString to let them look like native\n    const originalObjectToString = Object.prototype.toString;\n    const PROMISE_OBJECT_TO_STRING = '[object Promise]';\n    Object.prototype.toString = function () {\n        if (typeof Promise === 'function' && this instanceof Promise) {\n            return PROMISE_OBJECT_TO_STRING;\n        }\n        return originalObjectToString.call(this);\n    };\n});\n\nZone.__load_patch('node_util', (global, Zone, api) => {\n    api.patchOnProperties = patchOnProperties;\n    api.patchMethod = patchMethod;\n    api.bindArguments = bindArguments;\n    api.patchMacroTask = patchMacroTask;\n    setShouldCopySymbolProperties(true);\n});\n\n/**\n * @fileoverview\n * @suppress {missingRequire}\n */\nlet passiveSupported = false;\nif (typeof window !== 'undefined') {\n    try {\n        const options = Object.defineProperty({}, 'passive', {\n            get: function () {\n                passiveSupported = true;\n            }\n        });\n        // Note: We pass the `options` object as the event handler too. This is not compatible with the\n        // signature of `addEventListener` or `removeEventListener` but enables us to remove the handler\n        // without an actual handler.\n        window.addEventListener('test', options, options);\n        window.removeEventListener('test', options, options);\n    }\n    catch (err) {\n        passiveSupported = false;\n    }\n}\n// an identifier to tell ZoneTask do not create a new invoke closure\nconst OPTIMIZED_ZONE_EVENT_TASK_DATA = {\n    useG: true\n};\nconst zoneSymbolEventNames = {};\nconst globalSources = {};\nconst EVENT_NAME_SYMBOL_REGX = new RegExp('^' + ZONE_SYMBOL_PREFIX + '(\\\\w+)(true|false)$');\nconst IMMEDIATE_PROPAGATION_SYMBOL = zoneSymbol('propagationStopped');\nfunction prepareEventNames(eventName, eventNameToString) {\n    const falseEventName = (eventNameToString ? eventNameToString(eventName) : eventName) + FALSE_STR;\n    const trueEventName = (eventNameToString ? eventNameToString(eventName) : eventName) + TRUE_STR;\n    const symbol = ZONE_SYMBOL_PREFIX + falseEventName;\n    const symbolCapture = ZONE_SYMBOL_PREFIX + trueEventName;\n    zoneSymbolEventNames[eventName] = {};\n    zoneSymbolEventNames[eventName][FALSE_STR] = symbol;\n    zoneSymbolEventNames[eventName][TRUE_STR] = symbolCapture;\n}\nfunction patchEventTarget(_global, api, apis, patchOptions) {\n    const ADD_EVENT_LISTENER = (patchOptions && patchOptions.add) || ADD_EVENT_LISTENER_STR;\n    const REMOVE_EVENT_LISTENER = (patchOptions && patchOptions.rm) || REMOVE_EVENT_LISTENER_STR;\n    const LISTENERS_EVENT_LISTENER = (patchOptions && patchOptions.listeners) || 'eventListeners';\n    const REMOVE_ALL_LISTENERS_EVENT_LISTENER = (patchOptions && patchOptions.rmAll) || 'removeAllListeners';\n    const zoneSymbolAddEventListener = zoneSymbol(ADD_EVENT_LISTENER);\n    const ADD_EVENT_LISTENER_SOURCE = '.' + ADD_EVENT_LISTENER + ':';\n    const PREPEND_EVENT_LISTENER = 'prependListener';\n    const PREPEND_EVENT_LISTENER_SOURCE = '.' + PREPEND_EVENT_LISTENER + ':';\n    const invokeTask = function (task, target, event) {\n        // for better performance, check isRemoved which is set\n        // by removeEventListener\n        if (task.isRemoved) {\n            return;\n        }\n        const delegate = task.callback;\n        if (typeof delegate === 'object' && delegate.handleEvent) {\n            // create the bind version of handleEvent when invoke\n            task.callback = (event) => delegate.handleEvent(event);\n            task.originalDelegate = delegate;\n        }\n        // invoke static task.invoke\n        // need to try/catch error here, otherwise, the error in one event listener\n        // will break the executions of the other event listeners. Also error will\n        // not remove the event listener when `once` options is true.\n        let error;\n        try {\n            task.invoke(task, target, [event]);\n        }\n        catch (err) {\n            error = err;\n        }\n        const options = task.options;\n        if (options && typeof options === 'object' && options.once) {\n            // if options.once is true, after invoke once remove listener here\n            // only browser need to do this, nodejs eventEmitter will cal removeListener\n            // inside EventEmitter.once\n            const delegate = task.originalDelegate ? task.originalDelegate : task.callback;\n            target[REMOVE_EVENT_LISTENER].call(target, event.type, delegate, options);\n        }\n        return error;\n    };\n    function globalCallback(context, event, isCapture) {\n        // https://github.com/angular/zone.js/issues/911, in IE, sometimes\n        // event will be undefined, so we need to use window.event\n        event = event || _global.event;\n        if (!event) {\n            return;\n        }\n        // event.target is needed for Samsung TV and SourceBuffer\n        // || global is needed https://github.com/angular/zone.js/issues/190\n        const target = context || event.target || _global;\n        const tasks = target[zoneSymbolEventNames[event.type][isCapture ? TRUE_STR : FALSE_STR]];\n        if (tasks) {\n            const errors = [];\n            // invoke all tasks which attached to current target with given event.type and capture = false\n            // for performance concern, if task.length === 1, just invoke\n            if (tasks.length === 1) {\n                const err = invokeTask(tasks[0], target, event);\n                err && errors.push(err);\n            }\n            else {\n                // https://github.com/angular/zone.js/issues/836\n                // copy the tasks array before invoke, to avoid\n                // the callback will remove itself or other listener\n                const copyTasks = tasks.slice();\n                for (let i = 0; i < copyTasks.length; i++) {\n                    if (event && event[IMMEDIATE_PROPAGATION_SYMBOL] === true) {\n                        break;\n                    }\n                    const err = invokeTask(copyTasks[i], target, event);\n                    err && errors.push(err);\n                }\n            }\n            // Since there is only one error, we don't need to schedule microTask\n            // to throw the error.\n            if (errors.length === 1) {\n                throw errors[0];\n            }\n            else {\n                for (let i = 0; i < errors.length; i++) {\n                    const err = errors[i];\n                    api.nativeScheduleMicroTask(() => {\n                        throw err;\n                    });\n                }\n            }\n        }\n    }\n    // global shared zoneAwareCallback to handle all event callback with capture = false\n    const globalZoneAwareCallback = function (event) {\n        return globalCallback(this, event, false);\n    };\n    // global shared zoneAwareCallback to handle all event callback with capture = true\n    const globalZoneAwareCaptureCallback = function (event) {\n        return globalCallback(this, event, true);\n    };\n    function patchEventTargetMethods(obj, patchOptions) {\n        if (!obj) {\n            return false;\n        }\n        let useGlobalCallback = true;\n        if (patchOptions && patchOptions.useG !== undefined) {\n            useGlobalCallback = patchOptions.useG;\n        }\n        const validateHandler = patchOptions && patchOptions.vh;\n        let checkDuplicate = true;\n        if (patchOptions && patchOptions.chkDup !== undefined) {\n            checkDuplicate = patchOptions.chkDup;\n        }\n        let returnTarget = false;\n        if (patchOptions && patchOptions.rt !== undefined) {\n            returnTarget = patchOptions.rt;\n        }\n        let proto = obj;\n        while (proto && !proto.hasOwnProperty(ADD_EVENT_LISTENER)) {\n            proto = ObjectGetPrototypeOf(proto);\n        }\n        if (!proto && obj[ADD_EVENT_LISTENER]) {\n            // somehow we did not find it, but we can see it. This happens on IE for Window properties.\n            proto = obj;\n        }\n        if (!proto) {\n            return false;\n        }\n        if (proto[zoneSymbolAddEventListener]) {\n            return false;\n        }\n        const eventNameToString = patchOptions && patchOptions.eventNameToString;\n        // a shared global taskData to pass data for scheduleEventTask\n        // so we do not need to create a new object just for pass some data\n        const taskData = {};\n        const nativeAddEventListener = proto[zoneSymbolAddEventListener] = proto[ADD_EVENT_LISTENER];\n        const nativeRemoveEventListener = proto[zoneSymbol(REMOVE_EVENT_LISTENER)] =\n            proto[REMOVE_EVENT_LISTENER];\n        const nativeListeners = proto[zoneSymbol(LISTENERS_EVENT_LISTENER)] =\n            proto[LISTENERS_EVENT_LISTENER];\n        const nativeRemoveAllListeners = proto[zoneSymbol(REMOVE_ALL_LISTENERS_EVENT_LISTENER)] =\n            proto[REMOVE_ALL_LISTENERS_EVENT_LISTENER];\n        let nativePrependEventListener;\n        if (patchOptions && patchOptions.prepend) {\n            nativePrependEventListener = proto[zoneSymbol(patchOptions.prepend)] =\n                proto[patchOptions.prepend];\n        }\n        /**\n         * This util function will build an option object with passive option\n         * to handle all possible input from the user.\n         */\n        function buildEventListenerOptions(options, passive) {\n            if (!passiveSupported && typeof options === 'object' && options) {\n                // doesn't support passive but user want to pass an object as options.\n                // this will not work on some old browser, so we just pass a boolean\n                // as useCapture parameter\n                return !!options.capture;\n            }\n            if (!passiveSupported || !passive) {\n                return options;\n            }\n            if (typeof options === 'boolean') {\n                return { capture: options, passive: true };\n            }\n            if (!options) {\n                return { passive: true };\n            }\n            if (typeof options === 'object' && options.passive !== false) {\n                return { ...options, passive: true };\n            }\n            return options;\n        }\n        const customScheduleGlobal = function (task) {\n            // if there is already a task for the eventName + capture,\n            // just return, because we use the shared globalZoneAwareCallback here.\n            if (taskData.isExisting) {\n                return;\n            }\n            return nativeAddEventListener.call(taskData.target, taskData.eventName, taskData.capture ? globalZoneAwareCaptureCallback : globalZoneAwareCallback, taskData.options);\n        };\n        const customCancelGlobal = function (task) {\n            // if task is not marked as isRemoved, this call is directly\n            // from Zone.prototype.cancelTask, we should remove the task\n            // from tasksList of target first\n            if (!task.isRemoved) {\n                const symbolEventNames = zoneSymbolEventNames[task.eventName];\n                let symbolEventName;\n                if (symbolEventNames) {\n                    symbolEventName = symbolEventNames[task.capture ? TRUE_STR : FALSE_STR];\n                }\n                const existingTasks = symbolEventName && task.target[symbolEventName];\n                if (existingTasks) {\n                    for (let i = 0; i < existingTasks.length; i++) {\n                        const existingTask = existingTasks[i];\n                        if (existingTask === task) {\n                            existingTasks.splice(i, 1);\n                            // set isRemoved to data for faster invokeTask check\n                            task.isRemoved = true;\n                            if (existingTasks.length === 0) {\n                                // all tasks for the eventName + capture have gone,\n                                // remove globalZoneAwareCallback and remove the task cache from target\n                                task.allRemoved = true;\n                                task.target[symbolEventName] = null;\n                            }\n                            break;\n                        }\n                    }\n                }\n            }\n            // if all tasks for the eventName + capture have gone,\n            // we will really remove the global event callback,\n            // if not, return\n            if (!task.allRemoved) {\n                return;\n            }\n            return nativeRemoveEventListener.call(task.target, task.eventName, task.capture ? globalZoneAwareCaptureCallback : globalZoneAwareCallback, task.options);\n        };\n        const customScheduleNonGlobal = function (task) {\n            return nativeAddEventListener.call(taskData.target, taskData.eventName, task.invoke, taskData.options);\n        };\n        const customSchedulePrepend = function (task) {\n            return nativePrependEventListener.call(taskData.target, taskData.eventName, task.invoke, taskData.options);\n        };\n        const customCancelNonGlobal = function (task) {\n            return nativeRemoveEventListener.call(task.target, task.eventName, task.invoke, task.options);\n        };\n        const customSchedule = useGlobalCallback ? customScheduleGlobal : customScheduleNonGlobal;\n        const customCancel = useGlobalCallback ? customCancelGlobal : customCancelNonGlobal;\n        const compareTaskCallbackVsDelegate = function (task, delegate) {\n            const typeOfDelegate = typeof delegate;\n            return (typeOfDelegate === 'function' && task.callback === delegate) ||\n                (typeOfDelegate === 'object' && task.originalDelegate === delegate);\n        };\n        const compare = (patchOptions && patchOptions.diff) ? patchOptions.diff : compareTaskCallbackVsDelegate;\n        const unpatchedEvents = Zone[zoneSymbol('UNPATCHED_EVENTS')];\n        const passiveEvents = _global[zoneSymbol('PASSIVE_EVENTS')];\n        const makeAddListener = function (nativeListener, addSource, customScheduleFn, customCancelFn, returnTarget = false, prepend = false) {\n            return function () {\n                const target = this || _global;\n                let eventName = arguments[0];\n                if (patchOptions && patchOptions.transferEventName) {\n                    eventName = patchOptions.transferEventName(eventName);\n                }\n                let delegate = arguments[1];\n                if (!delegate) {\n                    return nativeListener.apply(this, arguments);\n                }\n                if (isNode && eventName === 'uncaughtException') {\n                    // don't patch uncaughtException of nodejs to prevent endless loop\n                    return nativeListener.apply(this, arguments);\n                }\n                // don't create the bind delegate function for handleEvent\n                // case here to improve addEventListener performance\n                // we will create the bind delegate when invoke\n                let isHandleEvent = false;\n                if (typeof delegate !== 'function') {\n                    if (!delegate.handleEvent) {\n                        return nativeListener.apply(this, arguments);\n                    }\n                    isHandleEvent = true;\n                }\n                if (validateHandler && !validateHandler(nativeListener, delegate, target, arguments)) {\n                    return;\n                }\n                const passive = passiveSupported && !!passiveEvents && passiveEvents.indexOf(eventName) !== -1;\n                const options = buildEventListenerOptions(arguments[2], passive);\n                if (unpatchedEvents) {\n                    // check unpatched list\n                    for (let i = 0; i < unpatchedEvents.length; i++) {\n                        if (eventName === unpatchedEvents[i]) {\n                            if (passive) {\n                                return nativeListener.call(target, eventName, delegate, options);\n                            }\n                            else {\n                                return nativeListener.apply(this, arguments);\n                            }\n                        }\n                    }\n                }\n                const capture = !options ? false : typeof options === 'boolean' ? true : options.capture;\n                const once = options && typeof options === 'object' ? options.once : false;\n                const zone = Zone.current;\n                let symbolEventNames = zoneSymbolEventNames[eventName];\n                if (!symbolEventNames) {\n                    prepareEventNames(eventName, eventNameToString);\n                    symbolEventNames = zoneSymbolEventNames[eventName];\n                }\n                const symbolEventName = symbolEventNames[capture ? TRUE_STR : FALSE_STR];\n                let existingTasks = target[symbolEventName];\n                let isExisting = false;\n                if (existingTasks) {\n                    // already have task registered\n                    isExisting = true;\n                    if (checkDuplicate) {\n                        for (let i = 0; i < existingTasks.length; i++) {\n                            if (compare(existingTasks[i], delegate)) {\n                                // same callback, same capture, same event name, just return\n                                return;\n                            }\n                        }\n                    }\n                }\n                else {\n                    existingTasks = target[symbolEventName] = [];\n                }\n                let source;\n                const constructorName = target.constructor['name'];\n                const targetSource = globalSources[constructorName];\n                if (targetSource) {\n                    source = targetSource[eventName];\n                }\n                if (!source) {\n                    source = constructorName + addSource +\n                        (eventNameToString ? eventNameToString(eventName) : eventName);\n                }\n                // do not create a new object as task.data to pass those things\n                // just use the global shared one\n                taskData.options = options;\n                if (once) {\n                    // if addEventListener with once options, we don't pass it to\n                    // native addEventListener, instead we keep the once setting\n                    // and handle ourselves.\n                    taskData.options.once = false;\n                }\n                taskData.target = target;\n                taskData.capture = capture;\n                taskData.eventName = eventName;\n                taskData.isExisting = isExisting;\n                const data = useGlobalCallback ? OPTIMIZED_ZONE_EVENT_TASK_DATA : undefined;\n                // keep taskData into data to allow onScheduleEventTask to access the task information\n                if (data) {\n                    data.taskData = taskData;\n                }\n                const task = zone.scheduleEventTask(source, delegate, data, customScheduleFn, customCancelFn);\n                // should clear taskData.target to avoid memory leak\n                // issue, https://github.com/angular/angular/issues/20442\n                taskData.target = null;\n                // need to clear up taskData because it is a global object\n                if (data) {\n                    data.taskData = null;\n                }\n                // have to save those information to task in case\n                // application may call task.zone.cancelTask() directly\n                if (once) {\n                    options.once = true;\n                }\n                if (!(!passiveSupported && typeof task.options === 'boolean')) {\n                    // if not support passive, and we pass an option object\n                    // to addEventListener, we should save the options to task\n                    task.options = options;\n                }\n                task.target = target;\n                task.capture = capture;\n                task.eventName = eventName;\n                if (isHandleEvent) {\n                    // save original delegate for compare to check duplicate\n                    task.originalDelegate = delegate;\n                }\n                if (!prepend) {\n                    existingTasks.push(task);\n                }\n                else {\n                    existingTasks.unshift(task);\n                }\n                if (returnTarget) {\n                    return target;\n                }\n            };\n        };\n        proto[ADD_EVENT_LISTENER] = makeAddListener(nativeAddEventListener, ADD_EVENT_LISTENER_SOURCE, customSchedule, customCancel, returnTarget);\n        if (nativePrependEventListener) {\n            proto[PREPEND_EVENT_LISTENER] = makeAddListener(nativePrependEventListener, PREPEND_EVENT_LISTENER_SOURCE, customSchedulePrepend, customCancel, returnTarget, true);\n        }\n        proto[REMOVE_EVENT_LISTENER] = function () {\n            const target = this || _global;\n            let eventName = arguments[0];\n            if (patchOptions && patchOptions.transferEventName) {\n                eventName = patchOptions.transferEventName(eventName);\n            }\n            const options = arguments[2];\n            const capture = !options ? false : typeof options === 'boolean' ? true : options.capture;\n            const delegate = arguments[1];\n            if (!delegate) {\n                return nativeRemoveEventListener.apply(this, arguments);\n            }\n            if (validateHandler &&\n                !validateHandler(nativeRemoveEventListener, delegate, target, arguments)) {\n                return;\n            }\n            const symbolEventNames = zoneSymbolEventNames[eventName];\n            let symbolEventName;\n            if (symbolEventNames) {\n                symbolEventName = symbolEventNames[capture ? TRUE_STR : FALSE_STR];\n            }\n            const existingTasks = symbolEventName && target[symbolEventName];\n            if (existingTasks) {\n                for (let i = 0; i < existingTasks.length; i++) {\n                    const existingTask = existingTasks[i];\n                    if (compare(existingTask, delegate)) {\n                        existingTasks.splice(i, 1);\n                        // set isRemoved to data for faster invokeTask check\n                        existingTask.isRemoved = true;\n                        if (existingTasks.length === 0) {\n                            // all tasks for the eventName + capture have gone,\n                            // remove globalZoneAwareCallback and remove the task cache from target\n                            existingTask.allRemoved = true;\n                            target[symbolEventName] = null;\n                            // in the target, we have an event listener which is added by on_property\n                            // such as target.onclick = function() {}, so we need to clear this internal\n                            // property too if all delegates all removed\n                            if (typeof eventName === 'string') {\n                                const onPropertySymbol = ZONE_SYMBOL_PREFIX + 'ON_PROPERTY' + eventName;\n                                target[onPropertySymbol] = null;\n                            }\n                        }\n                        existingTask.zone.cancelTask(existingTask);\n                        if (returnTarget) {\n                            return target;\n                        }\n                        return;\n                    }\n                }\n            }\n            // issue 930, didn't find the event name or callback\n            // from zone kept existingTasks, the callback maybe\n            // added outside of zone, we need to call native removeEventListener\n            // to try to remove it.\n            return nativeRemoveEventListener.apply(this, arguments);\n        };\n        proto[LISTENERS_EVENT_LISTENER] = function () {\n            const target = this || _global;\n            let eventName = arguments[0];\n            if (patchOptions && patchOptions.transferEventName) {\n                eventName = patchOptions.transferEventName(eventName);\n            }\n            const listeners = [];\n            const tasks = findEventTasks(target, eventNameToString ? eventNameToString(eventName) : eventName);\n            for (let i = 0; i < tasks.length; i++) {\n                const task = tasks[i];\n                let delegate = task.originalDelegate ? task.originalDelegate : task.callback;\n                listeners.push(delegate);\n            }\n            return listeners;\n        };\n        proto[REMOVE_ALL_LISTENERS_EVENT_LISTENER] = function () {\n            const target = this || _global;\n            let eventName = arguments[0];\n            if (!eventName) {\n                const keys = Object.keys(target);\n                for (let i = 0; i < keys.length; i++) {\n                    const prop = keys[i];\n                    const match = EVENT_NAME_SYMBOL_REGX.exec(prop);\n                    let evtName = match && match[1];\n                    // in nodejs EventEmitter, removeListener event is\n                    // used for monitoring the removeListener call,\n                    // so just keep removeListener eventListener until\n                    // all other eventListeners are removed\n                    if (evtName && evtName !== 'removeListener') {\n                        this[REMOVE_ALL_LISTENERS_EVENT_LISTENER].call(this, evtName);\n                    }\n                }\n                // remove removeListener listener finally\n                this[REMOVE_ALL_LISTENERS_EVENT_LISTENER].call(this, 'removeListener');\n            }\n            else {\n                if (patchOptions && patchOptions.transferEventName) {\n                    eventName = patchOptions.transferEventName(eventName);\n                }\n                const symbolEventNames = zoneSymbolEventNames[eventName];\n                if (symbolEventNames) {\n                    const symbolEventName = symbolEventNames[FALSE_STR];\n                    const symbolCaptureEventName = symbolEventNames[TRUE_STR];\n                    const tasks = target[symbolEventName];\n                    const captureTasks = target[symbolCaptureEventName];\n                    if (tasks) {\n                        const removeTasks = tasks.slice();\n                        for (let i = 0; i < removeTasks.length; i++) {\n                            const task = removeTasks[i];\n                            let delegate = task.originalDelegate ? task.originalDelegate : task.callback;\n                            this[REMOVE_EVENT_LISTENER].call(this, eventName, delegate, task.options);\n                        }\n                    }\n                    if (captureTasks) {\n                        const removeTasks = captureTasks.slice();\n                        for (let i = 0; i < removeTasks.length; i++) {\n                            const task = removeTasks[i];\n                            let delegate = task.originalDelegate ? task.originalDelegate : task.callback;\n                            this[REMOVE_EVENT_LISTENER].call(this, eventName, delegate, task.options);\n                        }\n                    }\n                }\n            }\n            if (returnTarget) {\n                return this;\n            }\n        };\n        // for native toString patch\n        attachOriginToPatched(proto[ADD_EVENT_LISTENER], nativeAddEventListener);\n        attachOriginToPatched(proto[REMOVE_EVENT_LISTENER], nativeRemoveEventListener);\n        if (nativeRemoveAllListeners) {\n            attachOriginToPatched(proto[REMOVE_ALL_LISTENERS_EVENT_LISTENER], nativeRemoveAllListeners);\n        }\n        if (nativeListeners) {\n            attachOriginToPatched(proto[LISTENERS_EVENT_LISTENER], nativeListeners);\n        }\n        return true;\n    }\n    let results = [];\n    for (let i = 0; i < apis.length; i++) {\n        results[i] = patchEventTargetMethods(apis[i], patchOptions);\n    }\n    return results;\n}\nfunction findEventTasks(target, eventName) {\n    if (!eventName) {\n        const foundTasks = [];\n        for (let prop in target) {\n            const match = EVENT_NAME_SYMBOL_REGX.exec(prop);\n            let evtName = match && match[1];\n            if (evtName && (!eventName || evtName === eventName)) {\n                const tasks = target[prop];\n                if (tasks) {\n                    for (let i = 0; i < tasks.length; i++) {\n                        foundTasks.push(tasks[i]);\n                    }\n                }\n            }\n        }\n        return foundTasks;\n    }\n    let symbolEventName = zoneSymbolEventNames[eventName];\n    if (!symbolEventName) {\n        prepareEventNames(eventName);\n        symbolEventName = zoneSymbolEventNames[eventName];\n    }\n    const captureFalseTasks = target[symbolEventName[FALSE_STR]];\n    const captureTrueTasks = target[symbolEventName[TRUE_STR]];\n    if (!captureFalseTasks) {\n        return captureTrueTasks ? captureTrueTasks.slice() : [];\n    }\n    else {\n        return captureTrueTasks ? captureFalseTasks.concat(captureTrueTasks) :\n            captureFalseTasks.slice();\n    }\n}\n\nZone.__load_patch('EventEmitter', (global, Zone, api) => {\n    // For EventEmitter\n    const EE_ADD_LISTENER = 'addListener';\n    const EE_PREPEND_LISTENER = 'prependListener';\n    const EE_REMOVE_LISTENER = 'removeListener';\n    const EE_REMOVE_ALL_LISTENER = 'removeAllListeners';\n    const EE_LISTENERS = 'listeners';\n    const EE_ON = 'on';\n    const EE_OFF = 'off';\n    const compareTaskCallbackVsDelegate = function (task, delegate) {\n        // same callback, same capture, same event name, just return\n        return task.callback === delegate || task.callback.listener === delegate;\n    };\n    const eventNameToString = function (eventName) {\n        if (typeof eventName === 'string') {\n            return eventName;\n        }\n        if (!eventName) {\n            return '';\n        }\n        return eventName.toString().replace('(', '_').replace(')', '_');\n    };\n    function patchEventEmitterMethods(obj) {\n        const result = patchEventTarget(global, api, [obj], {\n            useG: false,\n            add: EE_ADD_LISTENER,\n            rm: EE_REMOVE_LISTENER,\n            prepend: EE_PREPEND_LISTENER,\n            rmAll: EE_REMOVE_ALL_LISTENER,\n            listeners: EE_LISTENERS,\n            chkDup: false,\n            rt: true,\n            diff: compareTaskCallbackVsDelegate,\n            eventNameToString: eventNameToString\n        });\n        if (result && result[0]) {\n            obj[EE_ON] = obj[EE_ADD_LISTENER];\n            obj[EE_OFF] = obj[EE_REMOVE_LISTENER];\n        }\n    }\n    // EventEmitter\n    let events;\n    try {\n        events = require('events');\n    }\n    catch (err) {\n    }\n    if (events && events.EventEmitter) {\n        patchEventEmitterMethods(events.EventEmitter.prototype);\n    }\n});\n\nZone.__load_patch('fs', () => {\n    let fs;\n    try {\n        fs = require('fs');\n    }\n    catch (err) {\n    }\n    // watch, watchFile, unwatchFile has been patched\n    // because EventEmitter has been patched\n    const TO_PATCH_MACROTASK_METHODS = [\n        'access', 'appendFile', 'chmod', 'chown', 'close', 'exists', 'fchmod',\n        'fchown', 'fdatasync', 'fstat', 'fsync', 'ftruncate', 'futimes', 'lchmod',\n        'lchown', 'link', 'lstat', 'mkdir', 'mkdtemp', 'open', 'read',\n        'readdir', 'readFile', 'readlink', 'realpath', 'rename', 'rmdir', 'stat',\n        'symlink', 'truncate', 'unlink', 'utimes', 'write', 'writeFile',\n    ];\n    if (fs) {\n        TO_PATCH_MACROTASK_METHODS.filter(name => !!fs[name] && typeof fs[name] === 'function')\n            .forEach(name => {\n            patchMacroTask(fs, name, (self, args) => {\n                return {\n                    name: 'fs.' + name,\n                    args: args,\n                    cbIdx: args.length > 0 ? args.length - 1 : -1,\n                    target: self\n                };\n            });\n        });\n    }\n});\n\n/**\n * @fileoverview\n * @suppress {missingRequire}\n */\nconst taskSymbol = zoneSymbol('zoneTask');\nfunction patchTimer(window, setName, cancelName, nameSuffix) {\n    let setNative = null;\n    let clearNative = null;\n    setName += nameSuffix;\n    cancelName += nameSuffix;\n    const tasksByHandleId = {};\n    function scheduleTask(task) {\n        const data = task.data;\n        data.args[0] = function () {\n            return task.invoke.apply(this, arguments);\n        };\n        data.handleId = setNative.apply(window, data.args);\n        return task;\n    }\n    function clearTask(task) {\n        return clearNative.call(window, task.data.handleId);\n    }\n    setNative =\n        patchMethod(window, setName, (delegate) => function (self, args) {\n            if (typeof args[0] === 'function') {\n                const options = {\n                    isPeriodic: nameSuffix === 'Interval',\n                    delay: (nameSuffix === 'Timeout' || nameSuffix === 'Interval') ? args[1] || 0 :\n                        undefined,\n                    args: args\n                };\n                const callback = args[0];\n                args[0] = function timer() {\n                    try {\n                        return callback.apply(this, arguments);\n                    }\n                    finally {\n                        // issue-934, task will be cancelled\n                        // even it is a periodic task such as\n                        // setInterval\n                        // https://github.com/angular/angular/issues/40387\n                        // Cleanup tasksByHandleId should be handled before scheduleTask\n                        // Since some zoneSpec may intercept and doesn't trigger\n                        // scheduleFn(scheduleTask) provided here.\n                        if (!(options.isPeriodic)) {\n                            if (typeof options.handleId === 'number') {\n                                // in non-nodejs env, we remove timerId\n                                // from local cache\n                                delete tasksByHandleId[options.handleId];\n                            }\n                            else if (options.handleId) {\n                                // Node returns complex objects as handleIds\n                                // we remove task reference from timer object\n                                options.handleId[taskSymbol] = null;\n                            }\n                        }\n                    }\n                };\n                const task = scheduleMacroTaskWithCurrentZone(setName, args[0], options, scheduleTask, clearTask);\n                if (!task) {\n                    return task;\n                }\n                // Node.js must additionally support the ref and unref functions.\n                const handle = task.data.handleId;\n                if (typeof handle === 'number') {\n                    // for non nodejs env, we save handleId: task\n                    // mapping in local cache for clearTimeout\n                    tasksByHandleId[handle] = task;\n                }\n                else if (handle) {\n                    // for nodejs env, we save task\n                    // reference in timerId Object for clearTimeout\n                    handle[taskSymbol] = task;\n                }\n                // check whether handle is null, because some polyfill or browser\n                // may return undefined from setTimeout/setInterval/setImmediate/requestAnimationFrame\n                if (handle && handle.ref && handle.unref && typeof handle.ref === 'function' &&\n                    typeof handle.unref === 'function') {\n                    task.ref = handle.ref.bind(handle);\n                    task.unref = handle.unref.bind(handle);\n                }\n                if (typeof handle === 'number' || handle) {\n                    return handle;\n                }\n                return task;\n            }\n            else {\n                // cause an error by calling it directly.\n                return delegate.apply(window, args);\n            }\n        });\n    clearNative =\n        patchMethod(window, cancelName, (delegate) => function (self, args) {\n            const id = args[0];\n            let task;\n            if (typeof id === 'number') {\n                // non nodejs env.\n                task = tasksByHandleId[id];\n            }\n            else {\n                // nodejs env.\n                task = id && id[taskSymbol];\n                // other environments.\n                if (!task) {\n                    task = id;\n                }\n            }\n            if (task && typeof task.type === 'string') {\n                if (task.state !== 'notScheduled' &&\n                    (task.cancelFn && task.data.isPeriodic || task.runCount === 0)) {\n                    if (typeof id === 'number') {\n                        delete tasksByHandleId[id];\n                    }\n                    else if (id) {\n                        id[taskSymbol] = null;\n                    }\n                    // Do not cancel already canceled functions\n                    task.zone.cancelTask(task);\n                }\n            }\n            else {\n                // cause an error by calling it directly.\n                delegate.apply(window, args);\n            }\n        });\n}\n\nconst set = 'set';\nconst clear = 'clear';\nZone.__load_patch('node_timers', (global, Zone) => {\n    // Timers\n    let globalUseTimeoutFromTimer = false;\n    try {\n        const timers = require('timers');\n        let globalEqualTimersTimeout = global.setTimeout === timers.setTimeout;\n        if (!globalEqualTimersTimeout && !isMix) {\n            // 1. if isMix, then we are in mix environment such as Electron\n            // we should only patch timers.setTimeout because global.setTimeout\n            // have been patched\n            // 2. if global.setTimeout not equal timers.setTimeout, check\n            // whether global.setTimeout use timers.setTimeout or not\n            const originSetTimeout = timers.setTimeout;\n            timers.setTimeout = function () {\n                globalUseTimeoutFromTimer = true;\n                return originSetTimeout.apply(this, arguments);\n            };\n            const detectTimeout = global.setTimeout(() => { }, 100);\n            clearTimeout(detectTimeout);\n            timers.setTimeout = originSetTimeout;\n        }\n        patchTimer(timers, set, clear, 'Timeout');\n        patchTimer(timers, set, clear, 'Interval');\n        patchTimer(timers, set, clear, 'Immediate');\n    }\n    catch (error) {\n        // timers module not exists, for example, when we using nativeScript\n        // timers is not available\n    }\n    if (isMix) {\n        // if we are in mix environment, such as Electron,\n        // the global.setTimeout has already been patched,\n        // so we just patch timers.setTimeout\n        return;\n    }\n    if (!globalUseTimeoutFromTimer) {\n        // 1. global setTimeout equals timers setTimeout\n        // 2. or global don't use timers setTimeout(maybe some other library patch setTimeout)\n        // 3. or load timers module error happens, we should patch global setTimeout\n        patchTimer(global, set, clear, 'Timeout');\n        patchTimer(global, set, clear, 'Interval');\n        patchTimer(global, set, clear, 'Immediate');\n    }\n    else {\n        // global use timers setTimeout, but not equals\n        // this happens when use nodejs v0.10.x, global setTimeout will\n        // use a lazy load version of timers setTimeout\n        // we should not double patch timer's setTimeout\n        // so we only store the __symbol__ for consistency\n        global[Zone.__symbol__('setTimeout')] = global.setTimeout;\n        global[Zone.__symbol__('setInterval')] = global.setInterval;\n        global[Zone.__symbol__('setImmediate')] = global.setImmediate;\n    }\n});\n// patch process related methods\nZone.__load_patch('nextTick', () => {\n    // patch nextTick as microTask\n    patchMicroTask(process, 'nextTick', (self, args) => {\n        return {\n            name: 'process.nextTick',\n            args: args,\n            cbIdx: (args.length > 0 && typeof args[0] === 'function') ? 0 : -1,\n            target: process\n        };\n    });\n});\nZone.__load_patch('handleUnhandledPromiseRejection', (global, Zone, api) => {\n    Zone[api.symbol('unhandledPromiseRejectionHandler')] =\n        findProcessPromiseRejectionHandler('unhandledRejection');\n    Zone[api.symbol('rejectionHandledHandler')] =\n        findProcessPromiseRejectionHandler('rejectionHandled');\n    // handle unhandled promise rejection\n    function findProcessPromiseRejectionHandler(evtName) {\n        return function (e) {\n            const eventTasks = findEventTasks(process, evtName);\n            eventTasks.forEach(eventTask => {\n                // process has added unhandledrejection event listener\n                // trigger the event listener\n                if (evtName === 'unhandledRejection') {\n                    eventTask.invoke(e.rejection, e.promise);\n                }\n                else if (evtName === 'rejectionHandled') {\n                    eventTask.invoke(e.promise);\n                }\n            });\n        };\n    }\n});\n// Crypto\nZone.__load_patch('crypto', () => {\n    let crypto;\n    try {\n        crypto = require('crypto');\n    }\n    catch (err) {\n    }\n    // use the generic patchMacroTask to patch crypto\n    if (crypto) {\n        const methodNames = ['randomBytes', 'pbkdf2'];\n        methodNames.forEach(name => {\n            patchMacroTask(crypto, name, (self, args) => {\n                return {\n                    name: 'crypto.' + name,\n                    args: args,\n                    cbIdx: (args.length > 0 && typeof args[args.length - 1] === 'function') ?\n                        args.length - 1 :\n                        -1,\n                    target: crypto\n                };\n            });\n        });\n    }\n});\nZone.__load_patch('console', (global, Zone) => {\n    const consoleMethods = ['dir', 'log', 'info', 'error', 'warn', 'assert', 'debug', 'timeEnd', 'trace'];\n    consoleMethods.forEach((m) => {\n        const originalMethod = console[Zone.__symbol__(m)] = console[m];\n        if (originalMethod) {\n            console[m] = function () {\n                const args = ArraySlice.call(arguments);\n                if (Zone.current === Zone.root) {\n                    return originalMethod.apply(this, args);\n                }\n                else {\n                    return Zone.root.run(originalMethod, this, args);\n                }\n            };\n        }\n    });\n});\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}