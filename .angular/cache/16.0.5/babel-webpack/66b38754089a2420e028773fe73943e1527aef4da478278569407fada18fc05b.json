{"ast":null,"code":"import { CommonEngine } from '@nguniversal/common/engine';\nimport { REQUEST, RESPONSE } from '@nguniversal/express-engine/tokens';\n\n/**\n * This is an express engine for handling Angular Applications\n */\nfunction ngExpressEngine(setupOptions) {\n  const engine = new CommonEngine(setupOptions.bootstrap, setupOptions.providers);\n  return function (filePath, options, callback) {\n    try {\n      const renderOptions = {\n        ...options\n      };\n      if (!setupOptions.bootstrap && !renderOptions.bootstrap) {\n        throw new Error('You must pass in a NgModule to be bootstrapped');\n      }\n      const {\n        req\n      } = renderOptions;\n      const res = renderOptions.res ?? req.res;\n      renderOptions.url = renderOptions.url ?? `${req.protocol}://${req.get('host') || ''}${req.baseUrl}${req.url}`;\n      renderOptions.documentFilePath = renderOptions.documentFilePath ?? filePath;\n      renderOptions.providers = [...(renderOptions.providers ?? []), getReqResProviders(req, res)];\n      // eslint-disable-next-line @typescript-eslint/no-unused-expressions\n      renderOptions.publicPath = renderOptions.publicPath ?? setupOptions.publicPath ?? options.settings?.views;\n      renderOptions.inlineCriticalCss = renderOptions.inlineCriticalCss ?? setupOptions.inlineCriticalCss;\n      engine.render(renderOptions).then(html => callback(null, html)).catch(callback);\n    } catch (err) {\n      callback(err);\n    }\n  };\n}\n/**\n * Get providers of the request and response\n */\nfunction getReqResProviders(req, res) {\n  const providers = [{\n    provide: REQUEST,\n    useValue: req\n  }];\n  if (res) {\n    providers.push({\n      provide: RESPONSE,\n      useValue: res\n    });\n  }\n  return providers;\n}\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { ngExpressEngine };","map":{"version":3,"names":["CommonEngine","REQUEST","RESPONSE","ngExpressEngine","setupOptions","engine","bootstrap","providers","filePath","options","callback","renderOptions","Error","req","res","url","protocol","get","baseUrl","documentFilePath","getReqResProviders","publicPath","settings","views","inlineCriticalCss","render","then","html","catch","err","provide","useValue","push"],"sources":["C:/Users/feder/OneDrive/Desktop/federico_lecca/follyway/spikes/gsap-spike-angular-ssr/node_modules/@nguniversal/express-engine/fesm2022/express-engine.mjs"],"sourcesContent":["import { CommonEngine } from '@nguniversal/common/engine';\nimport { REQUEST, RESPONSE } from '@nguniversal/express-engine/tokens';\n\n/**\n * This is an express engine for handling Angular Applications\n */\nfunction ngExpressEngine(setupOptions) {\n    const engine = new CommonEngine(setupOptions.bootstrap, setupOptions.providers);\n    return function (filePath, options, callback) {\n        try {\n            const renderOptions = { ...options };\n            if (!setupOptions.bootstrap && !renderOptions.bootstrap) {\n                throw new Error('You must pass in a NgModule to be bootstrapped');\n            }\n            const { req } = renderOptions;\n            const res = renderOptions.res ?? req.res;\n            renderOptions.url =\n                renderOptions.url ?? `${req.protocol}://${req.get('host') || ''}${req.baseUrl}${req.url}`;\n            renderOptions.documentFilePath = renderOptions.documentFilePath ?? filePath;\n            renderOptions.providers = [...(renderOptions.providers ?? []), getReqResProviders(req, res)];\n            // eslint-disable-next-line @typescript-eslint/no-unused-expressions\n            renderOptions.publicPath =\n                renderOptions.publicPath ?? setupOptions.publicPath ?? options.settings?.views;\n            renderOptions.inlineCriticalCss =\n                renderOptions.inlineCriticalCss ?? setupOptions.inlineCriticalCss;\n            engine\n                .render(renderOptions)\n                .then((html) => callback(null, html))\n                .catch(callback);\n        }\n        catch (err) {\n            callback(err);\n        }\n    };\n}\n/**\n * Get providers of the request and response\n */\nfunction getReqResProviders(req, res) {\n    const providers = [\n        {\n            provide: REQUEST,\n            useValue: req,\n        },\n    ];\n    if (res) {\n        providers.push({\n            provide: RESPONSE,\n            useValue: res,\n        });\n    }\n    return providers;\n}\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { ngExpressEngine };\n"],"mappings":"AAAA,SAASA,YAAY,QAAQ,4BAA4B;AACzD,SAASC,OAAO,EAAEC,QAAQ,QAAQ,oCAAoC;;AAEtE;AACA;AACA;AACA,SAASC,eAAeA,CAACC,YAAY,EAAE;EACnC,MAAMC,MAAM,GAAG,IAAIL,YAAY,CAACI,YAAY,CAACE,SAAS,EAAEF,YAAY,CAACG,SAAS,CAAC;EAC/E,OAAO,UAAUC,QAAQ,EAAEC,OAAO,EAAEC,QAAQ,EAAE;IAC1C,IAAI;MACA,MAAMC,aAAa,GAAG;QAAE,GAAGF;MAAQ,CAAC;MACpC,IAAI,CAACL,YAAY,CAACE,SAAS,IAAI,CAACK,aAAa,CAACL,SAAS,EAAE;QACrD,MAAM,IAAIM,KAAK,CAAC,gDAAgD,CAAC;MACrE;MACA,MAAM;QAAEC;MAAI,CAAC,GAAGF,aAAa;MAC7B,MAAMG,GAAG,GAAGH,aAAa,CAACG,GAAG,IAAID,GAAG,CAACC,GAAG;MACxCH,aAAa,CAACI,GAAG,GACbJ,aAAa,CAACI,GAAG,IAAK,GAAEF,GAAG,CAACG,QAAS,MAAKH,GAAG,CAACI,GAAG,CAAC,MAAM,CAAC,IAAI,EAAG,GAAEJ,GAAG,CAACK,OAAQ,GAAEL,GAAG,CAACE,GAAI,EAAC;MAC7FJ,aAAa,CAACQ,gBAAgB,GAAGR,aAAa,CAACQ,gBAAgB,IAAIX,QAAQ;MAC3EG,aAAa,CAACJ,SAAS,GAAG,CAAC,IAAII,aAAa,CAACJ,SAAS,IAAI,EAAE,CAAC,EAAEa,kBAAkB,CAACP,GAAG,EAAEC,GAAG,CAAC,CAAC;MAC5F;MACAH,aAAa,CAACU,UAAU,GACpBV,aAAa,CAACU,UAAU,IAAIjB,YAAY,CAACiB,UAAU,IAAIZ,OAAO,CAACa,QAAQ,EAAEC,KAAK;MAClFZ,aAAa,CAACa,iBAAiB,GAC3Bb,aAAa,CAACa,iBAAiB,IAAIpB,YAAY,CAACoB,iBAAiB;MACrEnB,MAAM,CACDoB,MAAM,CAACd,aAAa,CAAC,CACrBe,IAAI,CAAEC,IAAI,IAAKjB,QAAQ,CAAC,IAAI,EAAEiB,IAAI,CAAC,CAAC,CACpCC,KAAK,CAAClB,QAAQ,CAAC;IACxB,CAAC,CACD,OAAOmB,GAAG,EAAE;MACRnB,QAAQ,CAACmB,GAAG,CAAC;IACjB;EACJ,CAAC;AACL;AACA;AACA;AACA;AACA,SAAST,kBAAkBA,CAACP,GAAG,EAAEC,GAAG,EAAE;EAClC,MAAMP,SAAS,GAAG,CACd;IACIuB,OAAO,EAAE7B,OAAO;IAChB8B,QAAQ,EAAElB;EACd,CAAC,CACJ;EACD,IAAIC,GAAG,EAAE;IACLP,SAAS,CAACyB,IAAI,CAAC;MACXF,OAAO,EAAE5B,QAAQ;MACjB6B,QAAQ,EAAEjB;IACd,CAAC,CAAC;EACN;EACA,OAAOP,SAAS;AACpB;;AAEA;AACA;AACA;;AAEA,SAASJ,eAAe"},"metadata":{},"sourceType":"module","externalDependencies":[]}